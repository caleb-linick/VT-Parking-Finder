{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yugio\\\\OneDrive\\\\Desktop\\\\Capstone\\\\VT-Parking-Finder\\\\src\\\\components\\\\InteractiveMap.jsx\",\n  _s = $RefreshSig$();\n/**\r\n * InteractiveMap.jsx\r\n * \r\n * This component renders an interactive map displaying all parking lots at Virginia Tech.\r\n * It uses the MapWithUpdatingCenter component to handle map functionality\r\n * and provides a visual representation of parking lot availability across campus.\r\n * \r\n * The map includes:\r\n * - Color-coded markers for each parking lot based on availability\r\n * - Popups with detailed information when clicking a marker\r\n * - Navigation to the detailed view of a parking lot when selected\r\n * \r\n * @author VT Parking Finder Team\r\n * @version 1.0.0\r\n */\n\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport MapWithUpdatingCenter from './MapWithUpdatingCenter';\nimport 'leaflet/dist/leaflet.css';\n\n// Mock data for parking lots - in production, this would come from an API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst parkingLots = [{\n  id: 1,\n  name: 'Perry Street Garage',\n  position: [37.2312, -80.4263],\n  availableSpots: 45,\n  totalSpots: 120,\n  status: 'Some Open'\n}, {\n  id: 2,\n  name: 'Cassell Lot',\n  position: [37.2214, -80.4205],\n  availableSpots: 0,\n  totalSpots: 80,\n  status: 'Full'\n}, {\n  id: 3,\n  name: 'Litton Reaves',\n  position: [37.2220, -80.4267],\n  availableSpots: 35,\n  totalSpots: 60,\n  status: 'Available'\n}, {\n  id: 4,\n  name: 'Squires',\n  position: [37.2291, -80.4168],\n  availableSpots: 5,\n  totalSpots: 40,\n  status: 'Some Open'\n}, {\n  id: 5,\n  name: 'Architecture Annex',\n  position: [37.2283, -80.4158],\n  availableSpots: 20,\n  totalSpots: 30,\n  status: 'Available'\n}];\n\n/**\r\n * Renders an interactive map of VT parking lots\r\n * This component is primarily used on the HomePage to display all parking lots\r\n * \r\n * @returns {JSX.Element} The rendered interactive map\r\n */\nconst InteractiveMap = () => {\n  _s();\n  const navigate = useNavigate();\n\n  /**\r\n   * Handler for marker click events\r\n   * Navigates to the detailed view of the selected parking lot\r\n   * \r\n   * @param {number} id - The ID of the clicked parking lot\r\n   */\n  const handleMarkerClick = id => {\n    // Navigate to the page for the parking lot\n    navigate(`/parking-lots/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.mapContainer,\n    children: /*#__PURE__*/_jsxDEV(MapWithUpdatingCenter, {\n      center: [37.225, -80.423] // VT campus center coordinates\n      ,\n      zoom: 14.6 // Zoom level to show all parking lots\n      ,\n      markers: parkingLots // All parking lots\n      ,\n      onMarkerClick: handleMarkerClick // Handler for marker clicks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n/**\r\n * Component styles\r\n */\n_s(InteractiveMap, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = InteractiveMap;\nconst styles = {\n  mapContainer: {\n    width: '100%',\n    height: '100%',\n    borderRadius: '4px',\n    overflow: 'hidden',\n    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.2)'\n  }\n};\nexport default InteractiveMap;\nvar _c;\n$RefreshReg$(_c, \"InteractiveMap\");","map":{"version":3,"names":["React","useNavigate","MapWithUpdatingCenter","jsxDEV","_jsxDEV","parkingLots","id","name","position","availableSpots","totalSpots","status","InteractiveMap","_s","navigate","handleMarkerClick","style","styles","mapContainer","children","center","zoom","markers","onMarkerClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","width","height","borderRadius","overflow","boxShadow","$RefreshReg$"],"sources":["C:/Users/yugio/OneDrive/Desktop/Capstone/VT-Parking-Finder/src/components/InteractiveMap.jsx"],"sourcesContent":["/**\r\n * InteractiveMap.jsx\r\n * \r\n * This component renders an interactive map displaying all parking lots at Virginia Tech.\r\n * It uses the MapWithUpdatingCenter component to handle map functionality\r\n * and provides a visual representation of parking lot availability across campus.\r\n * \r\n * The map includes:\r\n * - Color-coded markers for each parking lot based on availability\r\n * - Popups with detailed information when clicking a marker\r\n * - Navigation to the detailed view of a parking lot when selected\r\n * \r\n * @author VT Parking Finder Team\r\n * @version 1.0.0\r\n */\r\n\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport MapWithUpdatingCenter from './MapWithUpdatingCenter';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\n// Mock data for parking lots - in production, this would come from an API\r\nconst parkingLots = [\r\n  {\r\n    id: 1,\r\n    name: 'Perry Street Garage',\r\n    position: [37.2312, -80.4263],\r\n    availableSpots: 45,\r\n    totalSpots: 120,\r\n    status: 'Some Open',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Cassell Lot',\r\n    position: [37.2214, -80.4205],\r\n    availableSpots: 0,\r\n    totalSpots: 80,\r\n    status: 'Full',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Litton Reaves',\r\n    position: [37.2220, -80.4267],\r\n    availableSpots: 35,\r\n    totalSpots: 60,\r\n    status: 'Available',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Squires',\r\n    position: [37.2291, -80.4168],\r\n    availableSpots: 5,\r\n    totalSpots: 40,\r\n    status: 'Some Open',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Architecture Annex',\r\n    position: [37.2283, -80.4158],\r\n    availableSpots: 20,\r\n    totalSpots: 30,\r\n    status: 'Available',\r\n  },\r\n];\r\n\r\n/**\r\n * Renders an interactive map of VT parking lots\r\n * This component is primarily used on the HomePage to display all parking lots\r\n * \r\n * @returns {JSX.Element} The rendered interactive map\r\n */\r\nconst InteractiveMap = () => {\r\n  const navigate = useNavigate();\r\n  \r\n  /**\r\n   * Handler for marker click events\r\n   * Navigates to the detailed view of the selected parking lot\r\n   * \r\n   * @param {number} id - The ID of the clicked parking lot\r\n   */\r\n  const handleMarkerClick = (id) => {\r\n    // Navigate to the page for the parking lot\r\n    navigate(`/parking-lots/${id}`);\r\n  };\r\n\r\n  return (\r\n    <div style={styles.mapContainer}>\r\n      {/* \r\n        Use the MapWithUpdatingCenter component with:\r\n        - Center coordinates for VT campus\r\n        - Appropriate zoom level to show all parking lots\r\n        - All parking lot markers\r\n        - Click handler for navigation\r\n      */}\r\n      <MapWithUpdatingCenter \r\n        center={[37.225, -80.423]} // VT campus center coordinates\r\n        zoom={14.6} // Zoom level to show all parking lots\r\n        markers={parkingLots} // All parking lots\r\n        onMarkerClick={handleMarkerClick} // Handler for marker clicks\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * Component styles\r\n */\r\nconst styles = {\r\n  mapContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n    borderRadius: '4px',\r\n    overflow: 'hidden',\r\n    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.2)',\r\n  },\r\n};\r\n\r\nexport default InteractiveMap;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,qBAAqB,MAAM,yBAAyB;AAC3D,OAAO,0BAA0B;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAG,CAClB;EACEC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,qBAAqB;EAC3BC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;EAC7BC,cAAc,EAAE,EAAE;EAClBC,UAAU,EAAE,GAAG;EACfC,MAAM,EAAE;AACV,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,aAAa;EACnBC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;EAC7BC,cAAc,EAAE,CAAC;EACjBC,UAAU,EAAE,EAAE;EACdC,MAAM,EAAE;AACV,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,eAAe;EACrBC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;EAC7BC,cAAc,EAAE,EAAE;EAClBC,UAAU,EAAE,EAAE;EACdC,MAAM,EAAE;AACV,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,SAAS;EACfC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;EAC7BC,cAAc,EAAE,CAAC;EACjBC,UAAU,EAAE,EAAE;EACdC,MAAM,EAAE;AACV,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,oBAAoB;EAC1BC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;EAC7BC,cAAc,EAAE,EAAE;EAClBC,UAAU,EAAE,EAAE;EACdC,MAAM,EAAE;AACV,CAAC,CACF;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;;EAE9B;AACF;AACA;AACA;AACA;AACA;EACE,MAAMc,iBAAiB,GAAIT,EAAE,IAAK;IAChC;IACAQ,QAAQ,CAAC,iBAAiBR,EAAE,EAAE,CAAC;EACjC,CAAC;EAED,oBACEF,OAAA;IAAKY,KAAK,EAAEC,MAAM,CAACC,YAAa;IAAAC,QAAA,eAQ9Bf,OAAA,CAACF,qBAAqB;MACpBkB,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,MAAM,CAAE,CAAC;MAAA;MAC3BC,IAAI,EAAE,IAAK,CAAC;MAAA;MACZC,OAAO,EAAEjB,WAAY,CAAC;MAAA;MACtBkB,aAAa,EAAER,iBAAkB,CAAC;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;;AAED;AACA;AACA;AAFAd,EAAA,CAjCMD,cAAc;EAAA,QACDX,WAAW;AAAA;AAAA2B,EAAA,GADxBhB,cAAc;AAoCpB,MAAMK,MAAM,GAAG;EACbC,YAAY,EAAE;IACZW,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdC,YAAY,EAAE,KAAK;IACnBC,QAAQ,EAAE,QAAQ;IAClBC,SAAS,EAAE;EACb;AACF,CAAC;AAED,eAAerB,cAAc;AAAC,IAAAgB,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}