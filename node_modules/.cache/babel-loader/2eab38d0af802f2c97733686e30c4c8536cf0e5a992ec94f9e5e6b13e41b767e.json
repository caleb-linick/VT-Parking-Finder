{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yugio\\\\OneDrive\\\\Desktop\\\\Capstone\\\\VT-Parking-Finder\\\\src\\\\components\\\\ParkingLots.jsx\",\n  _s = $RefreshSig$();\n/**\r\n * ParkingLots.jsx\r\n * \r\n * Component for displaying all parking lots with JWT authentication.\r\n * \r\n * Features:\r\n * -  A list of all parking lots with their current status\r\n * -  Detailed information for the selected parking lot\r\n * -  An interactive map centered on the selected lot\r\n * - Functionality to add/remove lots from favorites\r\n * \r\n * @author VT Parking Finder Team\r\n * @version 1.2.0\r\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Header from './Header';\nimport MapWithUpdatingCenter from './MapWithUpdatingCenter';\nimport apiService from '../services/apiService';\nimport 'leaflet/dist/leaflet.css';\n\n// Sample data for parking lots - in production, this would come from an API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst parkingLots = [{\n  id: 1,\n  name: 'Perry Street Garage',\n  position: [37.2312, -80.4263],\n  availableSpots: 45,\n  totalSpots: 120,\n  status: 'Some Open'\n}, {\n  id: 2,\n  name: 'Cassell Lot',\n  position: [37.2214, -80.4205],\n  availableSpots: 0,\n  totalSpots: 80,\n  status: 'Full'\n}, {\n  id: 3,\n  name: 'Litton Reaves',\n  position: [37.2220, -80.4267],\n  availableSpots: 35,\n  totalSpots: 60,\n  status: 'Available'\n}, {\n  id: 4,\n  name: 'Squires',\n  position: [37.2291, -80.4168],\n  availableSpots: 5,\n  totalSpots: 40,\n  status: 'Some Open'\n}, {\n  id: 5,\n  name: 'Architecture Annex',\n  position: [37.2283, -80.4158],\n  availableSpots: 20,\n  totalSpots: 30,\n  status: 'Available'\n}];\n\n/**\r\n * Component that displays all parking lots with JWT authentication\r\n * \r\n * @returns {JSX.Element} The rendered parking lots view\r\n */\nconst ParkingLots = () => {\n  _s();\n  // State for the currently selected parking lot\n  const [selectedLot, setSelectedLot] = useState(null);\n\n  // State for user's favorite parking lots\n  const [userFavorites, setUserFavorites] = useState([]);\n\n  // State for UI\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Hook for programmatic navigation\n  const navigate = useNavigate();\n\n  /**\r\n   * Load user favorites from JWT token on component mount\r\n   */\n  useEffect(() => {\n    const loadFavorites = async () => {\n      if (apiService.isAuthenticated()) {\n        setIsLoading(true);\n        setError(null);\n        try {\n          // Fetch favorites using JWT authentication\n          const favorites = await apiService.getFavorites();\n          setUserFavorites(favorites);\n        } catch (error) {\n          console.error('Error loading favorites:', error);\n\n          // Handle different error types\n          if (error.response && error.response.status === 401) {\n            setError('Your session has expired. Please log in again.');\n            apiService.logout();\n          } else {\n            setError('Failed to load favorites. Using cached data if available.');\n\n            // Fall back to cached favorites in localStorage\n            const userData = apiService.getUser();\n            if (userData && userData.favorites) {\n              setUserFavorites(userData.favorites);\n            }\n          }\n        } finally {\n          setIsLoading(false);\n        }\n      } else {\n        // Not logged in, clear favorites\n        setUserFavorites([]);\n      }\n    };\n    loadFavorites();\n  }, []);\n\n  /**\r\n   * Initialize with the first lot selected when component mounts\r\n   */\n  useEffect(() => {\n    if (parkingLots.length > 0 && !selectedLot) {\n      setSelectedLot(parkingLots[0]);\n    }\n  }, []);\n\n  /**\r\n   * Check if a lot is in the user's favorites\r\n   * @param {number} lotId - The ID of the parking lot to check\r\n   * @returns {boolean} True if the lot is in favorites, false otherwise\r\n   */\n  const isFavorite = lotId => {\n    return userFavorites.includes(lotId);\n  };\n\n  /**\r\n   * Toggle a parking lot's favorite status with JWT auth\r\n   * @param {number} lotId - The ID of the parking lot to toggle\r\n   */\n  const toggleFavorite = async lotId => {\n    // Check if user is authenticated\n    if (!apiService.isAuthenticated()) {\n      alert('Please log in to save favorites');\n      navigate('/login');\n      return;\n    }\n    try {\n      setError(null);\n\n      // Compute the updated favorites list\n      let newFavorites;\n      if (userFavorites.includes(lotId)) {\n        // Remove the lot if it's already favorited\n        newFavorites = userFavorites.filter(id => id !== lotId);\n      } else {\n        // Add the lot to favorites\n        newFavorites = [...userFavorites, lotId];\n      }\n\n      // Optimistically update UI\n      setUserFavorites(newFavorites);\n\n      // Send the new favorites list to the backend\n      await apiService.updateFavorites(newFavorites);\n    } catch (error) {\n      console.error('Error updating favorites:', error);\n\n      // Revert to previous state on error\n      if (error.response && error.response.status === 401) {\n        setError('Your session has expired. Please log in again.');\n        apiService.logout();\n        navigate('/login');\n      } else {\n        // Revert the optimistic update\n        setError('Failed to update favorites. Please try again.');\n\n        // Reload favorites from backend\n        try {\n          const favorites = await apiService.getFavorites();\n          setUserFavorites(favorites);\n        } catch (e) {\n          // If second request also fails, use what we had before\n          const userData = apiService.getUser();\n          if (userData && userData.favorites) {\n            setUserFavorites(userData.favorites);\n          }\n        }\n      }\n    }\n  };\n\n  /**\r\n   * Handle selection of a parking lot from the list\r\n   * @param {Object} lot - The parking lot object that was selected\r\n   */\n  const handleLotSelect = lot => {\n    setSelectedLot(lot);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      style: styles.main,\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.errorBanner,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setError(null),\n          style: styles.dismissButton,\n          children: \"Dismiss\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.contentContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.listContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: styles.sectionTitle,\n            children: \"List of parking lots\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.loadingContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.loadingSpinner\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading favorites...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: styles.lotsList,\n            children: parkingLots.map(lot => /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                ...styles.lotItem,\n                ...(selectedLot && selectedLot.id === lot.id ? styles.selectedLot : {})\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: styles.lotItemContent,\n                onClick: () => handleLotSelect(lot),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: styles.lotName,\n                  children: lot.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    ...styles.lotStatus,\n                    backgroundColor: lot.status === 'Full' ? 'red' : lot.status === 'Some Open' ? 'yellow' : 'green',\n                    color: lot.status === 'Some Open' ? 'black' : 'white'\n                  },\n                  children: lot.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => {\n                  e.stopPropagation(); // Prevent lot selection when clicking favorite button\n                  toggleFavorite(lot.id);\n                },\n                style: isFavorite(lot.id) ? styles.favoriteButton.active : styles.favoriteButton.default,\n                \"aria-label\": isFavorite(lot.id) ? \"Remove from favorites\" : \"Add to favorites\",\n                children: isFavorite(lot.id) ? '★' : '☆'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this)]\n            }, lot.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.detailContainer,\n          children: selectedLot ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              style: styles.detailTitle,\n              children: selectedLot.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.lotDetails,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Available Spots: \", selectedLot.availableSpots, \"/\", selectedLot.totalSpots]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Status: \", selectedLot.status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: styles.buttonContainer,\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: `/parking-lots/${selectedLot.id}`,\n                  style: styles.viewDetailsButton,\n                  children: \"View Floor Plan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => toggleFavorite(selectedLot.id),\n                  style: isFavorite(selectedLot.id) ? styles.favoriteButtonDetail.active : styles.favoriteButtonDetail.default,\n                  children: isFavorite(selectedLot.id) ? 'Remove from Favorites' : 'Add to Favorites'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.mapWrapper,\n              children: /*#__PURE__*/_jsxDEV(MapWithUpdatingCenter, {\n                center: selectedLot.position,\n                zoom: 17,\n                markers: [selectedLot],\n                onMarkerClick: id => navigate(`/parking-lots/${id}`)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.noSelectionMessage,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Select a parking lot to see details and floor plan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n\n/**\r\n * Component styles\r\n */\n_s(ParkingLots, \"uamIEsLwLyQnWdp84ydccqUPDuY=\", false, function () {\n  return [useNavigate];\n});\n_c = ParkingLots;\nconst styles = {\n  container: {\n    backgroundColor: '#800000',\n    // VT Maroon background\n    minHeight: '100vh',\n    margin: 0,\n    padding: 0,\n    color: '#FFFFFF',\n    fontFamily: 'Arial, sans-serif'\n  },\n  main: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '20px'\n  },\n  errorBanner: {\n    width: '90%',\n    backgroundColor: '#FFDDDD',\n    // Light red\n    color: '#800000',\n    // VT Maroon\n    padding: '10px 15px',\n    borderRadius: '4px',\n    marginBottom: '20px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  dismissButton: {\n    backgroundColor: '#800000',\n    // VT Maroon\n    color: 'white',\n    border: 'none',\n    padding: '5px 10px',\n    borderRadius: '4px',\n    cursor: 'pointer'\n  },\n  contentContainer: {\n    display: 'flex',\n    width: '90%',\n    gap: '20px'\n  },\n  // Left panel styles\n  listContainer: {\n    flex: 1,\n    backgroundColor: '#EEEEEE',\n    borderRadius: '4px',\n    padding: '20px',\n    color: '#333333'\n  },\n  sectionTitle: {\n    textAlign: 'center',\n    marginTop: 0\n  },\n  lotsList: {\n    listStyle: 'none',\n    padding: 0\n  },\n  lotItem: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '10px 15px',\n    backgroundColor: '#FFFFFF',\n    borderRadius: '4px',\n    marginBottom: '10px',\n    cursor: 'pointer',\n    transition: 'all 0.2s ease'\n  },\n  lotItemContent: {\n    flex: 1,\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  selectedLot: {\n    backgroundColor: '#E0E0E0',\n    borderLeft: '5px solid #800000'\n  },\n  lotName: {\n    fontWeight: 'bold'\n  },\n  lotStatus: {\n    padding: '4px 8px',\n    borderRadius: '4px',\n    fontSize: '0.8rem',\n    fontWeight: 'bold'\n  },\n  favoriteButton: {\n    default: {\n      backgroundColor: 'transparent',\n      border: 'none',\n      color: '#999999',\n      fontSize: '24px',\n      cursor: 'pointer',\n      marginLeft: '10px',\n      padding: '0 5px'\n    },\n    active: {\n      backgroundColor: 'transparent',\n      border: 'none',\n      color: '#FFD700',\n      // Gold color for active favorites\n      fontSize: '24px',\n      cursor: 'pointer',\n      marginLeft: '10px',\n      padding: '0 5px'\n    }\n  },\n  loadingContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '30px'\n  },\n  loadingSpinner: {\n    width: '30px',\n    height: '30px',\n    border: '3px solid rgba(0, 0, 0, 0.1)',\n    borderRadius: '50%',\n    borderTop: '3px solid #800000',\n    // VT Maroon\n    animation: 'spin 1s linear infinite',\n    marginBottom: '15px'\n  },\n  // Right panel styles\n  detailContainer: {\n    flex: 2,\n    backgroundColor: '#EEEEEE',\n    borderRadius: '4px',\n    padding: '20px',\n    color: '#333333',\n    minHeight: '500px'\n  },\n  detailTitle: {\n    textAlign: 'center',\n    marginTop: 0\n  },\n  lotDetails: {\n    backgroundColor: '#FFFFFF',\n    padding: '15px',\n    borderRadius: '4px',\n    marginBottom: '20px'\n  },\n  buttonContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginTop: '15px'\n  },\n  viewDetailsButton: {\n    display: 'inline-block',\n    padding: '10px 15px',\n    backgroundColor: '#800000',\n    color: '#FFFFFF',\n    textDecoration: 'none',\n    borderRadius: '4px',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    flex: 1,\n    marginRight: '10px'\n  },\n  favoriteButtonDetail: {\n    default: {\n      flex: 1,\n      padding: '10px 15px',\n      backgroundColor: '#333333',\n      color: '#FFFFFF',\n      border: 'none',\n      borderRadius: '4px',\n      cursor: 'pointer',\n      fontWeight: 'bold'\n    },\n    active: {\n      flex: 1,\n      padding: '10px 15px',\n      backgroundColor: '#FFD700',\n      // Gold\n      color: '#333333',\n      border: 'none',\n      borderRadius: '4px',\n      cursor: 'pointer',\n      fontWeight: 'bold'\n    }\n  },\n  mapWrapper: {\n    width: '100%',\n    height: '400px',\n    borderRadius: '4px',\n    overflow: 'hidden'\n  },\n  noSelectionMessage: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    textAlign: 'center',\n    color: '#666666',\n    fontStyle: 'italic'\n  }\n};\nexport default ParkingLots;\nvar _c;\n$RefreshReg$(_c, \"ParkingLots\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","Header","MapWithUpdatingCenter","apiService","jsxDEV","_jsxDEV","parkingLots","id","name","position","availableSpots","totalSpots","status","ParkingLots","_s","selectedLot","setSelectedLot","userFavorites","setUserFavorites","isLoading","setIsLoading","error","setError","navigate","loadFavorites","isAuthenticated","favorites","getFavorites","console","response","logout","userData","getUser","length","isFavorite","lotId","includes","toggleFavorite","alert","newFavorites","filter","updateFavorites","e","handleLotSelect","lot","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","main","errorBanner","onClick","dismissButton","contentContainer","listContainer","sectionTitle","loadingContainer","loadingSpinner","lotsList","map","lotItem","lotItemContent","lotName","lotStatus","backgroundColor","color","stopPropagation","favoriteButton","active","default","detailContainer","detailTitle","lotDetails","buttonContainer","to","viewDetailsButton","favoriteButtonDetail","mapWrapper","center","zoom","markers","onMarkerClick","noSelectionMessage","_c","minHeight","margin","padding","fontFamily","display","flexDirection","alignItems","width","borderRadius","marginBottom","justifyContent","border","cursor","gap","flex","textAlign","marginTop","listStyle","transition","borderLeft","fontWeight","fontSize","marginLeft","height","borderTop","animation","textDecoration","marginRight","overflow","fontStyle","$RefreshReg$"],"sources":["C:/Users/yugio/OneDrive/Desktop/Capstone/VT-Parking-Finder/src/components/ParkingLots.jsx"],"sourcesContent":["/**\r\n * ParkingLots.jsx\r\n * \r\n * Component for displaying all parking lots with JWT authentication.\r\n * \r\n * Features:\r\n * -  A list of all parking lots with their current status\r\n * -  Detailed information for the selected parking lot\r\n * -  An interactive map centered on the selected lot\r\n * - Functionality to add/remove lots from favorites\r\n * \r\n * @author VT Parking Finder Team\r\n * @version 1.2.0\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport MapWithUpdatingCenter from './MapWithUpdatingCenter';\r\nimport apiService from '../services/apiService';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\n// Sample data for parking lots - in production, this would come from an API\r\nconst parkingLots = [\r\n  {\r\n    id: 1,\r\n    name: 'Perry Street Garage',\r\n    position: [37.2312, -80.4263],\r\n    availableSpots: 45,\r\n    totalSpots: 120,\r\n    status: 'Some Open'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Cassell Lot',\r\n    position: [37.2214, -80.4205],\r\n    availableSpots: 0,\r\n    totalSpots: 80,\r\n    status: 'Full'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Litton Reaves',\r\n    position: [37.2220, -80.4267],\r\n    availableSpots: 35,\r\n    totalSpots: 60,\r\n    status: 'Available'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Squires',\r\n    position: [37.2291, -80.4168],\r\n    availableSpots: 5,\r\n    totalSpots: 40,\r\n    status: 'Some Open'\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Architecture Annex',\r\n    position: [37.2283, -80.4158],\r\n    availableSpots: 20,\r\n    totalSpots: 30,\r\n    status: 'Available'\r\n  },\r\n];\r\n\r\n/**\r\n * Component that displays all parking lots with JWT authentication\r\n * \r\n * @returns {JSX.Element} The rendered parking lots view\r\n */\r\nconst ParkingLots = () => {\r\n  // State for the currently selected parking lot\r\n  const [selectedLot, setSelectedLot] = useState(null);\r\n  \r\n  // State for user's favorite parking lots\r\n  const [userFavorites, setUserFavorites] = useState([]);\r\n  \r\n  // State for UI\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Hook for programmatic navigation\r\n  const navigate = useNavigate();\r\n\r\n  /**\r\n   * Load user favorites from JWT token on component mount\r\n   */\r\n  useEffect(() => {\r\n    const loadFavorites = async () => {\r\n      if (apiService.isAuthenticated()) {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        \r\n        try {\r\n          // Fetch favorites using JWT authentication\r\n          const favorites = await apiService.getFavorites();\r\n          setUserFavorites(favorites);\r\n        } catch (error) {\r\n          console.error('Error loading favorites:', error);\r\n          \r\n          // Handle different error types\r\n          if (error.response && error.response.status === 401) {\r\n            setError('Your session has expired. Please log in again.');\r\n            apiService.logout();\r\n          } else {\r\n            setError('Failed to load favorites. Using cached data if available.');\r\n            \r\n            // Fall back to cached favorites in localStorage\r\n            const userData = apiService.getUser();\r\n            if (userData && userData.favorites) {\r\n              setUserFavorites(userData.favorites);\r\n            }\r\n          }\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n      } else {\r\n        // Not logged in, clear favorites\r\n        setUserFavorites([]);\r\n      }\r\n    };\r\n    \r\n    loadFavorites();\r\n  }, []);\r\n\r\n  /**\r\n   * Initialize with the first lot selected when component mounts\r\n   */\r\n  useEffect(() => {\r\n    if (parkingLots.length > 0 && !selectedLot) {\r\n      setSelectedLot(parkingLots[0]);\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * Check if a lot is in the user's favorites\r\n   * @param {number} lotId - The ID of the parking lot to check\r\n   * @returns {boolean} True if the lot is in favorites, false otherwise\r\n   */\r\n  const isFavorite = (lotId) => {\r\n    return userFavorites.includes(lotId);\r\n  };\r\n\r\n  /**\r\n   * Toggle a parking lot's favorite status with JWT auth\r\n   * @param {number} lotId - The ID of the parking lot to toggle\r\n   */\r\n  const toggleFavorite = async (lotId) => {\r\n    // Check if user is authenticated\r\n    if (!apiService.isAuthenticated()) {\r\n      alert('Please log in to save favorites');\r\n      navigate('/login');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setError(null);\r\n      \r\n      // Compute the updated favorites list\r\n      let newFavorites;\r\n      if (userFavorites.includes(lotId)) {\r\n        // Remove the lot if it's already favorited\r\n        newFavorites = userFavorites.filter(id => id !== lotId);\r\n      } else {\r\n        // Add the lot to favorites\r\n        newFavorites = [...userFavorites, lotId];\r\n      }\r\n      \r\n      // Optimistically update UI\r\n      setUserFavorites(newFavorites);\r\n      \r\n      // Send the new favorites list to the backend\r\n      await apiService.updateFavorites(newFavorites);\r\n    } catch (error) {\r\n      console.error('Error updating favorites:', error);\r\n      \r\n      // Revert to previous state on error\r\n      if (error.response && error.response.status === 401) {\r\n        setError('Your session has expired. Please log in again.');\r\n        apiService.logout();\r\n        navigate('/login');\r\n      } else {\r\n        // Revert the optimistic update\r\n        setError('Failed to update favorites. Please try again.');\r\n        \r\n        // Reload favorites from backend\r\n        try {\r\n          const favorites = await apiService.getFavorites();\r\n          setUserFavorites(favorites);\r\n        } catch (e) {\r\n          // If second request also fails, use what we had before\r\n          const userData = apiService.getUser();\r\n          if (userData && userData.favorites) {\r\n            setUserFavorites(userData.favorites);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle selection of a parking lot from the list\r\n   * @param {Object} lot - The parking lot object that was selected\r\n   */\r\n  const handleLotSelect = (lot) => {\r\n    setSelectedLot(lot);\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <Header />\r\n      <main style={styles.main}>\r\n        {/* Error display if applicable */}\r\n        {error && (\r\n          <div style={styles.errorBanner}>\r\n            <p>{error}</p>\r\n            <button \r\n              onClick={() => setError(null)} \r\n              style={styles.dismissButton}\r\n            >\r\n              Dismiss\r\n            </button>\r\n          </div>\r\n        )}\r\n        \r\n        <div style={styles.contentContainer}>\r\n          {/* Left panel: List of parking lots */}\r\n          <div style={styles.listContainer}>\r\n            <h2 style={styles.sectionTitle}>List of parking lots</h2>\r\n            {isLoading ? (\r\n              <div style={styles.loadingContainer}>\r\n                <div style={styles.loadingSpinner}></div>\r\n                <p>Loading favorites...</p>\r\n              </div>\r\n            ) : (\r\n              <ul style={styles.lotsList}>\r\n                {parkingLots.map((lot) => (\r\n                  <li \r\n                    key={lot.id} \r\n                    style={{\r\n                      ...styles.lotItem,\r\n                      ...(selectedLot && selectedLot.id === lot.id ? styles.selectedLot : {})\r\n                    }}\r\n                  >\r\n                    {/* Clickable lot information */}\r\n                    <div \r\n                      style={styles.lotItemContent} \r\n                      onClick={() => handleLotSelect(lot)}\r\n                    >\r\n                      <span style={styles.lotName}>{lot.name}</span>\r\n                      <span \r\n                        style={{\r\n                          ...styles.lotStatus,\r\n                          backgroundColor: lot.status === 'Full' ? 'red' : \r\n                                          lot.status === 'Some Open' ? 'yellow' : 'green',\r\n                          color: lot.status === 'Some Open' ? 'black' : 'white'\r\n                        }}\r\n                      >\r\n                        {lot.status}\r\n                      </span>\r\n                    </div>\r\n                    \r\n                    {/* Favorite toggle button */}\r\n                    <button \r\n                      onClick={(e) => {\r\n                        e.stopPropagation(); // Prevent lot selection when clicking favorite button\r\n                        toggleFavorite(lot.id);\r\n                      }}\r\n                      style={isFavorite(lot.id) ? styles.favoriteButton.active : styles.favoriteButton.default}\r\n                      aria-label={isFavorite(lot.id) ? \"Remove from favorites\" : \"Add to favorites\"}\r\n                    >\r\n                      {isFavorite(lot.id) ? '★' : '☆'}\r\n                    </button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n          \r\n          {/* Right panel: Detailed information and map */}\r\n          <div style={styles.detailContainer}>\r\n            {selectedLot ? (\r\n              <div>\r\n                <h2 style={styles.detailTitle}>{selectedLot.name}</h2>\r\n                <div style={styles.lotDetails}>\r\n                  <p>Available Spots: {selectedLot.availableSpots}/{selectedLot.totalSpots}</p>\r\n                  <p>Status: {selectedLot.status}</p>\r\n                  <div style={styles.buttonContainer}>\r\n                    {/* Link to detailed floor plan view */}\r\n                    <Link \r\n                      to={`/parking-lots/${selectedLot.id}`} \r\n                      style={styles.viewDetailsButton}\r\n                    >\r\n                      View Floor Plan\r\n                    </Link>\r\n                    \r\n                    {/* Favorite toggle button */}\r\n                    <button\r\n                      onClick={() => toggleFavorite(selectedLot.id)}\r\n                      style={isFavorite(selectedLot.id) ? styles.favoriteButtonDetail.active : styles.favoriteButtonDetail.default}\r\n                    >\r\n                      {isFavorite(selectedLot.id) ? 'Remove from Favorites' : 'Add to Favorites'}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Interactive map centered on the selected lot */}\r\n                <div style={styles.mapWrapper}>\r\n                  <MapWithUpdatingCenter \r\n                    center={selectedLot.position}\r\n                    zoom={17}\r\n                    markers={[selectedLot]}\r\n                    onMarkerClick={(id) => navigate(`/parking-lots/${id}`)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div style={styles.noSelectionMessage}>\r\n                <p>Select a parking lot to see details and floor plan</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * Component styles\r\n */\r\nconst styles = {\r\n  container: {\r\n    backgroundColor: '#800000', // VT Maroon background\r\n    minHeight: '100vh',\r\n    margin: 0,\r\n    padding: 0,\r\n    color: '#FFFFFF',\r\n    fontFamily: 'Arial, sans-serif',\r\n  },\r\n  main: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n  },\r\n  errorBanner: {\r\n    width: '90%',\r\n    backgroundColor: '#FFDDDD', // Light red\r\n    color: '#800000', // VT Maroon\r\n    padding: '10px 15px',\r\n    borderRadius: '4px',\r\n    marginBottom: '20px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  dismissButton: {\r\n    backgroundColor: '#800000', // VT Maroon\r\n    color: 'white',\r\n    border: 'none',\r\n    padding: '5px 10px',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    width: '90%',\r\n    gap: '20px',\r\n  },\r\n  // Left panel styles\r\n  listContainer: {\r\n    flex: 1,\r\n    backgroundColor: '#EEEEEE',\r\n    borderRadius: '4px',\r\n    padding: '20px',\r\n    color: '#333333',\r\n  },\r\n  sectionTitle: {\r\n    textAlign: 'center',\r\n    marginTop: 0,\r\n  },\r\n  lotsList: {\r\n    listStyle: 'none',\r\n    padding: 0,\r\n  },\r\n  lotItem: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '10px 15px',\r\n    backgroundColor: '#FFFFFF',\r\n    borderRadius: '4px',\r\n    marginBottom: '10px',\r\n    cursor: 'pointer',\r\n    transition: 'all 0.2s ease',\r\n  },\r\n  lotItemContent: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  selectedLot: {\r\n    backgroundColor: '#E0E0E0',\r\n    borderLeft: '5px solid #800000',\r\n  },\r\n  lotName: {\r\n    fontWeight: 'bold',\r\n  },\r\n  lotStatus: {\r\n    padding: '4px 8px',\r\n    borderRadius: '4px',\r\n    fontSize: '0.8rem',\r\n    fontWeight: 'bold',\r\n  },\r\n  favoriteButton: {\r\n    default: {\r\n      backgroundColor: 'transparent',\r\n      border: 'none',\r\n      color: '#999999',\r\n      fontSize: '24px',\r\n      cursor: 'pointer',\r\n      marginLeft: '10px',\r\n      padding: '0 5px',\r\n    },\r\n    active: {\r\n      backgroundColor: 'transparent',\r\n      border: 'none',\r\n      color: '#FFD700', // Gold color for active favorites\r\n      fontSize: '24px',\r\n      cursor: 'pointer',\r\n      marginLeft: '10px',\r\n      padding: '0 5px',\r\n    }\r\n  },\r\n  loadingContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: '30px',\r\n  },\r\n  loadingSpinner: {\r\n    width: '30px',\r\n    height: '30px',\r\n    border: '3px solid rgba(0, 0, 0, 0.1)',\r\n    borderRadius: '50%',\r\n    borderTop: '3px solid #800000', // VT Maroon\r\n    animation: 'spin 1s linear infinite',\r\n    marginBottom: '15px',\r\n  },\r\n  // Right panel styles\r\n  detailContainer: {\r\n    flex: 2,\r\n    backgroundColor: '#EEEEEE',\r\n    borderRadius: '4px',\r\n    padding: '20px',\r\n    color: '#333333',\r\n    minHeight: '500px',\r\n  },\r\n  detailTitle: {\r\n    textAlign: 'center',\r\n    marginTop: 0,\r\n  },\r\n  lotDetails: {\r\n    backgroundColor: '#FFFFFF',\r\n    padding: '15px',\r\n    borderRadius: '4px',\r\n    marginBottom: '20px',\r\n  },\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    marginTop: '15px',\r\n  },\r\n  viewDetailsButton: {\r\n    display: 'inline-block',\r\n    padding: '10px 15px',\r\n    backgroundColor: '#800000',\r\n    color: '#FFFFFF',\r\n    textDecoration: 'none',\r\n    borderRadius: '4px',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n    flex: 1,\r\n    marginRight: '10px',\r\n  },\r\n  favoriteButtonDetail: {\r\n    default: {\r\n      flex: 1,\r\n      padding: '10px 15px',\r\n      backgroundColor: '#333333',\r\n      color: '#FFFFFF',\r\n      border: 'none',\r\n      borderRadius: '4px',\r\n      cursor: 'pointer',\r\n      fontWeight: 'bold',\r\n    },\r\n    active: {\r\n      flex: 1,\r\n      padding: '10px 15px',\r\n      backgroundColor: '#FFD700', // Gold\r\n      color: '#333333',\r\n      border: 'none',\r\n      borderRadius: '4px',\r\n      cursor: 'pointer',\r\n      fontWeight: 'bold',\r\n    }\r\n  },\r\n  mapWrapper: {\r\n    width: '100%',\r\n    height: '400px',\r\n    borderRadius: '4px',\r\n    overflow: 'hidden',\r\n  },\r\n  noSelectionMessage: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n    textAlign: 'center',\r\n    color: '#666666',\r\n    fontStyle: 'italic',\r\n  },\r\n};\r\n\r\nexport default ParkingLots;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}