{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yugio\\\\OneDrive\\\\Desktop\\\\Capstone\\\\VT-Parking-Finder\\\\src\\\\components\\\\ParkingLots.jsx\",\n  _s = $RefreshSig$();\n/**\r\n * ParkingLots.jsx\r\n * \r\n * This component displays a comprehensive view of all parking lots at Virginia Tech.\r\n * It provides:\r\n * 1. A list of all parking lots with their current status\r\n * 2. Detailed information for the selected parking lot\r\n * 3. An interactive map centered on the selected lot\r\n * 4. Functionality to add/remove lots from favorites\r\n * \r\n * The component uses the MapWithUpdatingCenter component to ensure smooth\r\n * transitions when the selected parking lot changes.\r\n * \r\n * @author VT Parking Finder Team\r\n * @version 1.0.0\r\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Header from './Header';\nimport MapWithUpdatingCenter from './MapWithUpdatingCenter';\nimport 'leaflet/dist/leaflet.css';\n\n// Mock data for parking lots - in production, this would come from an API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst parkingLots = [{\n  id: 1,\n  name: 'Perry Street Garage',\n  position: [37.2312, -80.4263],\n  availableSpots: 45,\n  totalSpots: 120,\n  status: 'Some Open'\n}, {\n  id: 2,\n  name: 'Cassell Lot',\n  position: [37.2214, -80.4205],\n  availableSpots: 0,\n  totalSpots: 80,\n  status: 'Full'\n}, {\n  id: 3,\n  name: 'Litton Reaves',\n  position: [37.2220, -80.4267],\n  availableSpots: 35,\n  totalSpots: 60,\n  status: 'Available'\n}, {\n  id: 4,\n  name: 'Squires',\n  position: [37.2291, -80.4168],\n  availableSpots: 5,\n  totalSpots: 40,\n  status: 'Some Open'\n}, {\n  id: 5,\n  name: 'Architecture Annex',\n  position: [37.2283, -80.4158],\n  availableSpots: 20,\n  totalSpots: 30,\n  status: 'Available'\n}];\nconst ParkingLots = () => {\n  _s();\n  // State for the currently selected parking lot\n  const [selectedLot, setSelectedLot] = useState(null);\n\n  // State for user's favorite parking lots\n  const [userFavorites, setUserFavorites] = useState([]);\n\n  // Hook for programmatic navigation\n  const navigate = useNavigate();\n\n  /**\r\n   * Load user favorites from localStorage on component mount\r\n   */\n  useEffect(() => {\n    const userStr = localStorage.getItem('user');\n    if (userStr) {\n      const user = JSON.parse(userStr);\n      if (user.favorites) {\n        setUserFavorites(user.favorites);\n      }\n    }\n  }, []);\n\n  /**\r\n   * Initialize with the first lot selected when component mounts\r\n   */\n  useEffect(() => {\n    if (parkingLots.length > 0 && !selectedLot) {\n      setSelectedLot(parkingLots[0]);\n    }\n  }, []);\n\n  /**\r\n   * Check if a lot is in the user's favorites\r\n   * @param {number} lotId - The ID of the parking lot to check\r\n   * @returns {boolean} True if the lot is in favorites, false otherwise\r\n   */\n  const isFavorite = lotId => {\n    return userFavorites.includes(lotId);\n  };\n\n  /**\r\n   * Toggle a parking lot's favorite status\r\n   * @param {number} lotId - The ID of the parking lot to toggle\r\n   */\n  const toggleFavorite = async lotId => {\n    const userStr = localStorage.getItem('user');\n    if (!userStr) {\n      alert('Please log in to save favorites');\n      return;\n    }\n    const user = JSON.parse(userStr);\n    let favorites = user.favorites || [];\n\n    // Compute the updated favorites list\n    if (favorites.includes(lotId)) {\n      // Remove the lot if it's already favorited\n      favorites = favorites.filter(id => id !== lotId);\n    } else {\n      favorites.push(lotId);\n    }\n\n    // Send the new favorites list to the backend\n    try {\n      const response = await fetch('/favorites', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          favorites\n        })\n      });\n      if (response.ok) {\n        // Update the user's object favorites \n        user.favorites = favorites;\n        localStorage.setItem('user', JSON.stringify(user));\n        setUserFavorites(favorites);\n      } else {\n        console.error('Backend update failed:', response.status);\n      }\n    } catch (error) {\n      console.error('Error updating favorites:', error);\n    }\n  };\n\n  /**\r\n   * Handle selection of a parking lot from the list\r\n   * @param {Object} lot - The parking lot object that was selected\r\n   */\n  const handleLotSelect = lot => {\n    setSelectedLot(lot);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      style: styles.main,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.contentContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.listContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: styles.sectionTitle,\n            children: \"List of parking lots\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: styles.lotsList,\n            children: parkingLots.map(lot => /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                ...styles.lotItem,\n                ...(selectedLot && selectedLot.id === lot.id ? styles.selectedLot : {})\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: styles.lotItemContent,\n                onClick: () => handleLotSelect(lot),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: styles.lotName,\n                  children: lot.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    ...styles.lotStatus,\n                    backgroundColor: lot.status === 'Full' ? 'red' : lot.status === 'Some Open' ? 'yellow' : 'green',\n                    color: lot.status === 'Some Open' ? 'black' : 'white'\n                  },\n                  children: lot.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => {\n                  e.stopPropagation(); // Prevent lot selection when clicking favorite button\n                  toggleFavorite(lot.id);\n                },\n                style: isFavorite(lot.id) ? styles.favoriteButton.active : styles.favoriteButton.default,\n                \"aria-label\": isFavorite(lot.id) ? \"Remove from favorites\" : \"Add to favorites\",\n                children: isFavorite(lot.id) ? '★' : '☆'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this)]\n            }, lot.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.detailContainer,\n          children: selectedLot ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              style: styles.detailTitle,\n              children: selectedLot.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.lotDetails,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Available Spots: \", selectedLot.availableSpots, \"/\", selectedLot.totalSpots]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Status: \", selectedLot.status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: styles.buttonContainer,\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: `/parking-lots/${selectedLot.id}`,\n                  style: styles.viewDetailsButton,\n                  children: \"View Floor Plan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => toggleFavorite(selectedLot.id),\n                  style: isFavorite(selectedLot.id) ? styles.favoriteButtonDetail.active : styles.favoriteButtonDetail.default,\n                  children: isFavorite(selectedLot.id) ? 'Remove from Favorites' : 'Add to Favorites'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.mapWrapper,\n              children: /*#__PURE__*/_jsxDEV(MapWithUpdatingCenter, {\n                center: selectedLot.position,\n                zoom: 17,\n                markers: [selectedLot],\n                onMarkerClick: id => navigate(`/parking-lots/${id}`)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.noSelectionMessage,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Select a parking lot to see details and floor plan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n\n/**\r\n * Component styles\r\n */\n_s(ParkingLots, \"X5x5R0OOAy4aHPz+jn9BgmVbu3I=\", false, function () {\n  return [useNavigate];\n});\n_c = ParkingLots;\nconst styles = {\n  container: {\n    backgroundColor: '#800000',\n    // VT Maroon background\n    minHeight: '100vh',\n    margin: 0,\n    padding: 0,\n    color: '#FFFFFF',\n    fontFamily: 'Arial, sans-serif'\n  },\n  main: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '20px'\n  },\n  contentContainer: {\n    display: 'flex',\n    width: '90%',\n    gap: '20px'\n  },\n  // Left panel styles\n  listContainer: {\n    flex: 1,\n    backgroundColor: '#EEEEEE',\n    borderRadius: '4px',\n    padding: '20px',\n    color: '#333333'\n  },\n  sectionTitle: {\n    textAlign: 'center',\n    marginTop: 0\n  },\n  lotsList: {\n    listStyle: 'none',\n    padding: 0\n  },\n  lotItem: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '10px 15px',\n    backgroundColor: '#FFFFFF',\n    borderRadius: '4px',\n    marginBottom: '10px',\n    cursor: 'pointer',\n    transition: 'all 0.2s ease'\n  },\n  lotItemContent: {\n    flex: 1,\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  selectedLot: {\n    backgroundColor: '#E0E0E0',\n    borderLeft: '5px solid #800000'\n  },\n  lotName: {\n    fontWeight: 'bold'\n  },\n  lotStatus: {\n    padding: '4px 8px',\n    borderRadius: '4px',\n    fontSize: '0.8rem',\n    fontWeight: 'bold'\n  },\n  favoriteButton: {\n    default: {\n      backgroundColor: 'transparent',\n      border: 'none',\n      color: '#999999',\n      fontSize: '24px',\n      cursor: 'pointer',\n      marginLeft: '10px',\n      padding: '0 5px'\n    },\n    active: {\n      backgroundColor: 'transparent',\n      border: 'none',\n      color: '#FFD700',\n      // Gold color for active favorites\n      fontSize: '24px',\n      cursor: 'pointer',\n      marginLeft: '10px',\n      padding: '0 5px'\n    }\n  },\n  // Right panel styles\n  detailContainer: {\n    flex: 2,\n    backgroundColor: '#EEEEEE',\n    borderRadius: '4px',\n    padding: '20px',\n    color: '#333333',\n    minHeight: '500px'\n  },\n  detailTitle: {\n    textAlign: 'center',\n    marginTop: 0\n  },\n  lotDetails: {\n    backgroundColor: '#FFFFFF',\n    padding: '15px',\n    borderRadius: '4px',\n    marginBottom: '20px'\n  },\n  buttonContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginTop: '15px'\n  },\n  viewDetailsButton: {\n    display: 'inline-block',\n    padding: '10px 15px',\n    backgroundColor: '#800000',\n    color: '#FFFFFF',\n    textDecoration: 'none',\n    borderRadius: '4px',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    flex: 1,\n    marginRight: '10px'\n  },\n  favoriteButtonDetail: {\n    default: {\n      flex: 1,\n      padding: '10px 15px',\n      backgroundColor: '#333333',\n      color: '#FFFFFF',\n      border: 'none',\n      borderRadius: '4px',\n      cursor: 'pointer',\n      fontWeight: 'bold'\n    },\n    active: {\n      flex: 1,\n      padding: '10px 15px',\n      backgroundColor: '#FFD700',\n      // Gold\n      color: '#333333',\n      border: 'none',\n      borderRadius: '4px',\n      cursor: 'pointer',\n      fontWeight: 'bold'\n    }\n  },\n  mapWrapper: {\n    width: '100%',\n    height: '400px',\n    borderRadius: '4px',\n    overflow: 'hidden'\n  },\n  noSelectionMessage: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    textAlign: 'center',\n    color: '#666666',\n    fontStyle: 'italic'\n  }\n};\nexport default ParkingLots;\nvar _c;\n$RefreshReg$(_c, \"ParkingLots\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","Header","MapWithUpdatingCenter","jsxDEV","_jsxDEV","parkingLots","id","name","position","availableSpots","totalSpots","status","ParkingLots","_s","selectedLot","setSelectedLot","userFavorites","setUserFavorites","navigate","userStr","localStorage","getItem","user","JSON","parse","favorites","length","isFavorite","lotId","includes","toggleFavorite","alert","filter","push","response","fetch","method","headers","body","stringify","ok","setItem","console","error","handleLotSelect","lot","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","main","contentContainer","listContainer","sectionTitle","lotsList","map","lotItem","lotItemContent","onClick","lotName","lotStatus","backgroundColor","color","e","stopPropagation","favoriteButton","active","default","detailContainer","detailTitle","lotDetails","buttonContainer","to","viewDetailsButton","favoriteButtonDetail","mapWrapper","center","zoom","markers","onMarkerClick","noSelectionMessage","_c","minHeight","margin","padding","fontFamily","display","flexDirection","alignItems","width","gap","flex","borderRadius","textAlign","marginTop","listStyle","justifyContent","marginBottom","cursor","transition","borderLeft","fontWeight","fontSize","border","marginLeft","textDecoration","marginRight","height","overflow","fontStyle","$RefreshReg$"],"sources":["C:/Users/yugio/OneDrive/Desktop/Capstone/VT-Parking-Finder/src/components/ParkingLots.jsx"],"sourcesContent":["/**\r\n * ParkingLots.jsx\r\n * \r\n * This component displays a comprehensive view of all parking lots at Virginia Tech.\r\n * It provides:\r\n * 1. A list of all parking lots with their current status\r\n * 2. Detailed information for the selected parking lot\r\n * 3. An interactive map centered on the selected lot\r\n * 4. Functionality to add/remove lots from favorites\r\n * \r\n * The component uses the MapWithUpdatingCenter component to ensure smooth\r\n * transitions when the selected parking lot changes.\r\n * \r\n * @author VT Parking Finder Team\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport MapWithUpdatingCenter from './MapWithUpdatingCenter';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\n// Mock data for parking lots - in production, this would come from an API\r\nconst parkingLots = [\r\n  {\r\n    id: 1,\r\n    name: 'Perry Street Garage',\r\n    position: [37.2312, -80.4263],\r\n    availableSpots: 45,\r\n    totalSpots: 120,\r\n    status: 'Some Open'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Cassell Lot',\r\n    position: [37.2214, -80.4205],\r\n    availableSpots: 0,\r\n    totalSpots: 80,\r\n    status: 'Full'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Litton Reaves',\r\n    position: [37.2220, -80.4267],\r\n    availableSpots: 35,\r\n    totalSpots: 60,\r\n    status: 'Available'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Squires',\r\n    position: [37.2291, -80.4168],\r\n    availableSpots: 5,\r\n    totalSpots: 40,\r\n    status: 'Some Open'\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Architecture Annex',\r\n    position: [37.2283, -80.4158],\r\n    availableSpots: 20,\r\n    totalSpots: 30,\r\n    status: 'Available'\r\n  },\r\n];\r\n\r\nconst ParkingLots = () => {\r\n  // State for the currently selected parking lot\r\n  const [selectedLot, setSelectedLot] = useState(null);\r\n  \r\n  // State for user's favorite parking lots\r\n  const [userFavorites, setUserFavorites] = useState([]);\r\n  \r\n  // Hook for programmatic navigation\r\n  const navigate = useNavigate();\r\n\r\n  /**\r\n   * Load user favorites from localStorage on component mount\r\n   */\r\n  useEffect(() => {\r\n    const userStr = localStorage.getItem('user');\r\n    if (userStr) {\r\n      const user = JSON.parse(userStr);\r\n      if (user.favorites) {\r\n        setUserFavorites(user.favorites);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * Initialize with the first lot selected when component mounts\r\n   */\r\n  useEffect(() => {\r\n    if (parkingLots.length > 0 && !selectedLot) {\r\n      setSelectedLot(parkingLots[0]);\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * Check if a lot is in the user's favorites\r\n   * @param {number} lotId - The ID of the parking lot to check\r\n   * @returns {boolean} True if the lot is in favorites, false otherwise\r\n   */\r\n  const isFavorite = (lotId) => {\r\n    return userFavorites.includes(lotId);\r\n  };\r\n\r\n  /**\r\n   * Toggle a parking lot's favorite status\r\n   * @param {number} lotId - The ID of the parking lot to toggle\r\n   */\r\n  const toggleFavorite = async (lotId) => {\r\n    const userStr = localStorage.getItem('user');\r\n    if (!userStr) {\r\n      alert('Please log in to save favorites');\r\n      return;\r\n    }\r\n    \r\n    const user = JSON.parse(userStr);\r\n    let favorites = user.favorites || [];\r\n  \r\n    // Compute the updated favorites list\r\n    if (favorites.includes(lotId)) {\r\n      // Remove the lot if it's already favorited\r\n      favorites = favorites.filter(id => id !== lotId);\r\n    } else {\r\n      favorites.push(lotId);\r\n    }\r\n  \r\n    // Send the new favorites list to the backend\r\n    try {\r\n      const response = await fetch('/favorites', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ favorites })\r\n      });\r\n  \r\n      if (response.ok) {\r\n        // Update the user's object favorites \r\n        user.favorites = favorites;\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        setUserFavorites(favorites); \r\n      } else {\r\n        console.error('Backend update failed:', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating favorites:', error);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle selection of a parking lot from the list\r\n   * @param {Object} lot - The parking lot object that was selected\r\n   */\r\n  const handleLotSelect = (lot) => {\r\n    setSelectedLot(lot);\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <Header />\r\n      <main style={styles.main}>\r\n        <div style={styles.contentContainer}>\r\n          {/* Left panel: List of parking lots */}\r\n          <div style={styles.listContainer}>\r\n            <h2 style={styles.sectionTitle}>List of parking lots</h2>\r\n            <ul style={styles.lotsList}>\r\n              {parkingLots.map((lot) => (\r\n                <li \r\n                  key={lot.id} \r\n                  style={{\r\n                    ...styles.lotItem,\r\n                    ...(selectedLot && selectedLot.id === lot.id ? styles.selectedLot : {})\r\n                  }}\r\n                >\r\n                  {/* Clickable lot information */}\r\n                  <div \r\n                    style={styles.lotItemContent} \r\n                    onClick={() => handleLotSelect(lot)}\r\n                  >\r\n                    <span style={styles.lotName}>{lot.name}</span>\r\n                    <span \r\n                      style={{\r\n                        ...styles.lotStatus,\r\n                        backgroundColor: lot.status === 'Full' ? 'red' : \r\n                                        lot.status === 'Some Open' ? 'yellow' : 'green',\r\n                        color: lot.status === 'Some Open' ? 'black' : 'white'\r\n                      }}\r\n                    >\r\n                      {lot.status}\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  {/* Favorite toggle button */}\r\n                  <button \r\n                    onClick={(e) => {\r\n                      e.stopPropagation(); // Prevent lot selection when clicking favorite button\r\n                      toggleFavorite(lot.id);\r\n                    }}\r\n                    style={isFavorite(lot.id) ? styles.favoriteButton.active : styles.favoriteButton.default}\r\n                    aria-label={isFavorite(lot.id) ? \"Remove from favorites\" : \"Add to favorites\"}\r\n                  >\r\n                    {isFavorite(lot.id) ? '★' : '☆'}\r\n                  </button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          \r\n          {/* Right panel: Detailed information and map */}\r\n          <div style={styles.detailContainer}>\r\n            {selectedLot ? (\r\n              <div>\r\n                <h2 style={styles.detailTitle}>{selectedLot.name}</h2>\r\n                <div style={styles.lotDetails}>\r\n                  <p>Available Spots: {selectedLot.availableSpots}/{selectedLot.totalSpots}</p>\r\n                  <p>Status: {selectedLot.status}</p>\r\n                  <div style={styles.buttonContainer}>\r\n                    {/* Link to detailed floor plan view */}\r\n                    <Link \r\n                      to={`/parking-lots/${selectedLot.id}`} \r\n                      style={styles.viewDetailsButton}\r\n                    >\r\n                      View Floor Plan\r\n                    </Link>\r\n                    \r\n                    {/* Favorite toggle button */}\r\n                    <button\r\n                      onClick={() => toggleFavorite(selectedLot.id)}\r\n                      style={isFavorite(selectedLot.id) ? styles.favoriteButtonDetail.active : styles.favoriteButtonDetail.default}\r\n                    >\r\n                      {isFavorite(selectedLot.id) ? 'Remove from Favorites' : 'Add to Favorites'}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                \r\n                {/* Interactive map centered on the selected lot */}\r\n                <div style={styles.mapWrapper}>\r\n                  <MapWithUpdatingCenter \r\n                    center={selectedLot.position}\r\n                    zoom={17}\r\n                    markers={[selectedLot]}\r\n                    onMarkerClick={(id) => navigate(`/parking-lots/${id}`)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div style={styles.noSelectionMessage}>\r\n                <p>Select a parking lot to see details and floor plan</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * Component styles\r\n */\r\nconst styles = {\r\n  container: {\r\n    backgroundColor: '#800000', // VT Maroon background\r\n    minHeight: '100vh',\r\n    margin: 0,\r\n    padding: 0,\r\n    color: '#FFFFFF',\r\n    fontFamily: 'Arial, sans-serif',\r\n  },\r\n  main: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    width: '90%',\r\n    gap: '20px',\r\n  },\r\n  // Left panel styles\r\n  listContainer: {\r\n    flex: 1,\r\n    backgroundColor: '#EEEEEE',\r\n    borderRadius: '4px',\r\n    padding: '20px',\r\n    color: '#333333',\r\n  },\r\n  sectionTitle: {\r\n    textAlign: 'center',\r\n    marginTop: 0,\r\n  },\r\n  lotsList: {\r\n    listStyle: 'none',\r\n    padding: 0,\r\n  },\r\n  lotItem: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '10px 15px',\r\n    backgroundColor: '#FFFFFF',\r\n    borderRadius: '4px',\r\n    marginBottom: '10px',\r\n    cursor: 'pointer',\r\n    transition: 'all 0.2s ease',\r\n  },\r\n  lotItemContent: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  selectedLot: {\r\n    backgroundColor: '#E0E0E0',\r\n    borderLeft: '5px solid #800000',\r\n  },\r\n  lotName: {\r\n    fontWeight: 'bold',\r\n  },\r\n  lotStatus: {\r\n    padding: '4px 8px',\r\n    borderRadius: '4px',\r\n    fontSize: '0.8rem',\r\n    fontWeight: 'bold',\r\n  },\r\n  favoriteButton: {\r\n    default: {\r\n      backgroundColor: 'transparent',\r\n      border: 'none',\r\n      color: '#999999',\r\n      fontSize: '24px',\r\n      cursor: 'pointer',\r\n      marginLeft: '10px',\r\n      padding: '0 5px',\r\n    },\r\n    active: {\r\n      backgroundColor: 'transparent',\r\n      border: 'none',\r\n      color: '#FFD700', // Gold color for active favorites\r\n      fontSize: '24px',\r\n      cursor: 'pointer',\r\n      marginLeft: '10px',\r\n      padding: '0 5px',\r\n    }\r\n  },\r\n  // Right panel styles\r\n  detailContainer: {\r\n    flex: 2,\r\n    backgroundColor: '#EEEEEE',\r\n    borderRadius: '4px',\r\n    padding: '20px',\r\n    color: '#333333',\r\n    minHeight: '500px',\r\n  },\r\n  detailTitle: {\r\n    textAlign: 'center',\r\n    marginTop: 0,\r\n  },\r\n  lotDetails: {\r\n    backgroundColor: '#FFFFFF',\r\n    padding: '15px',\r\n    borderRadius: '4px',\r\n    marginBottom: '20px',\r\n  },\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    marginTop: '15px',\r\n  },\r\n  viewDetailsButton: {\r\n    display: 'inline-block',\r\n    padding: '10px 15px',\r\n    backgroundColor: '#800000',\r\n    color: '#FFFFFF',\r\n    textDecoration: 'none',\r\n    borderRadius: '4px',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n    flex: 1,\r\n    marginRight: '10px',\r\n  },\r\n  favoriteButtonDetail: {\r\n    default: {\r\n      flex: 1,\r\n      padding: '10px 15px',\r\n      backgroundColor: '#333333',\r\n      color: '#FFFFFF',\r\n      border: 'none',\r\n      borderRadius: '4px',\r\n      cursor: 'pointer',\r\n      fontWeight: 'bold',\r\n    },\r\n    active: {\r\n      flex: 1,\r\n      padding: '10px 15px',\r\n      backgroundColor: '#FFD700', // Gold\r\n      color: '#333333',\r\n      border: 'none',\r\n      borderRadius: '4px',\r\n      cursor: 'pointer',\r\n      fontWeight: 'bold',\r\n    }\r\n  },\r\n  mapWrapper: {\r\n    width: '100%',\r\n    height: '400px',\r\n    borderRadius: '4px',\r\n    overflow: 'hidden',\r\n  },\r\n  noSelectionMessage: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n    textAlign: 'center',\r\n    color: '#666666',\r\n    fontStyle: 'italic',\r\n  },\r\n};\r\n\r\nexport default ParkingLots;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}