{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yugio\\\\OneDrive\\\\Desktop\\\\Capstone\\\\VT-Parking-Finder\\\\src\\\\components\\\\ParkingLotDetail.jsx\",\n  _s = $RefreshSig$();\n/**\r\n * ParkingLotDetail.jsx\r\n * \r\n * Enhanced component with improved sensor data integration.\r\n * This component displays detailed information about a specific parking lot,\r\n * including real-time sensor data for parking spot occupancy.\r\n * \r\n * Features:\r\n * - Real-time polling of sensor data from the backend\r\n * - Visually updates parking spot status based on sensor data\r\n * - Error handling for sensor data retrieval\r\n * - JWT authentication for favorites functionality\r\n * - Improved loading states for better UX\r\n * \r\n * @author VT Parking Finder Team\r\n * @version 2.0.0\r\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport Header from './Header';\nimport GoogleMapsNavigation from './GoogleMapsNavigation';\nimport apiService from '../services/apiService';\n\n/**\r\n * Mock data for parking lots - in production, this would come from an API\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst parkingLotData = {\n  1: {\n    name: 'Perry Street Garage',\n    totalSpots: 120,\n    availableSpots: 45,\n    floors: 4,\n    spotsPerFloor: 30,\n    position: [37.2312, -80.4263],\n    address: '155 Perry St, Blacksburg, VA 24061',\n    // Mock occupancy data\n    occupancy: [\n    // Floor 1\n    [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1],\n    // Floor 2\n    [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1],\n    // Floor 3\n    [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n    // Floor 4\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]]\n  },\n  2: {\n    name: 'Cassell Lot',\n    totalSpots: 80,\n    availableSpots: 0,\n    floors: 1,\n    spotsPerFloor: 80,\n    position: [37.2214, -80.4205],\n    address: '675 Washington St, Blacksburg, VA 24061',\n    // All spots occupied\n    occupancy: [Array(80).fill(1)]\n  },\n  3: {\n    name: 'Litton Reaves',\n    totalSpots: 60,\n    availableSpots: 35,\n    floors: 1,\n    spotsPerFloor: 60,\n    position: [37.2220, -80.4267],\n    address: 'Litton Reaves Hall, Blacksburg, VA 24061',\n    occupancy: [\n    // Mix of available and occupied spots\n    [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0]]\n  },\n  4: {\n    name: 'Squires',\n    totalSpots: 40,\n    availableSpots: 5,\n    floors: 1,\n    spotsPerFloor: 40,\n    position: [37.2291, -80.4168],\n    address: 'Squires Student Center, 290 College Ave, Blacksburg, VA 24060',\n    occupancy: [\n    // Mostly occupied with few available spots\n    [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1]],\n    // Indicate which spot is connected to a sensor\n    sensorMappings: {\n      '1': 0 // Sensor ID 1 maps to spot index 0\n    }\n  },\n  5: {\n    name: 'Architecture Annex',\n    totalSpots: 30,\n    availableSpots: 20,\n    floors: 1,\n    spotsPerFloor: 30,\n    position: [37.2283, -80.4158],\n    address: 'Architecture Annex, Blacksburg, VA 24061',\n    occupancy: [\n    // Mostly available\n    [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1]]\n  }\n};\n\n/**\r\n * Component that displays detailed information about a specific parking lot\r\n * with real-time sensor updates\r\n * \r\n * @returns {JSX.Element} The rendered parking lot detail view\r\n */\nconst ParkingLotDetail = () => {\n  _s();\n  // Get the parking lot ID from URL parameters\n  const {\n    id\n  } = useParams();\n\n  // State management\n  const [selectedFloor, setSelectedFloor] = useState(0); // Default to first floor\n  const [lotInfo, setLotInfo] = useState(null);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const [sensorData, setSensorData] = useState(null);\n  const [sensorError, setSensorError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  /**\r\n   * Load parking lot information and check favorite status\r\n   * on component mount\r\n   */\n  useEffect(() => {\n    setIsLoading(true);\n\n    // Get lot info from mock data\n    const lotData = parkingLotData[id];\n    if (lotData) {\n      setLotInfo(lotData);\n\n      // Check if this lot is in user favorites using JWT auth\n      if (apiService.isAuthenticated()) {\n        const user = apiService.getUser();\n        if (user && user.favorites) {\n          setIsFavorite(user.favorites.includes(Number(id)));\n        }\n      }\n    }\n    setIsLoading(false);\n  }, [id]);\n\n  /**\r\n   * Poll sensor data for applicable parking lots\r\n   */\n  useEffect(() => {\n    // Only run this polling for lots with sensor mappings\n    if (lotInfo && lotInfo.sensorMappings) {\n      const sensors = Object.keys(lotInfo.sensorMappings);\n      if (sensors.length > 0) {\n        // Set up polling for sensor data\n        const pollSensorData = async () => {\n          try {\n            setSensorError(null);\n\n            // For demo purposes, we're only using sensor ID 1\n            // In production, you would fetch data for all sensors\n            const sensorId = 1;\n            const data = await apiService.getSensorData(sensorId);\n            if (data) {\n              setSensorData(data);\n\n              // Update the occupancy state based on sensor data\n              updateOccupancyFromSensor(sensorId, data.is_occupied);\n            }\n          } catch (error) {\n            console.error('Error fetching sensor data:', error);\n            setSensorError('Unable to fetch real-time sensor data');\n          }\n        };\n\n        // Initial fetch\n        pollSensorData();\n\n        // Set up polling interval (every 5 seconds)\n        const intervalId = setInterval(pollSensorData, 5000);\n\n        // Clean up interval on component unmount\n        return () => clearInterval(intervalId);\n      }\n    }\n  }, [lotInfo, id]);\n\n  /**\r\n   * Update the occupancy state based on sensor data\r\n   * \r\n   * @param {string} sensorId - The ID of the sensor\r\n   * @param {boolean} isOccupied - Whether the spot is occupied\r\n   */\n  const updateOccupancyFromSensor = (sensorId, isOccupied) => {\n    if (!lotInfo || !lotInfo.sensorMappings) return;\n\n    // Get the spot index for this sensor\n    const spotIndex = lotInfo.sensorMappings[sensorId];\n    if (spotIndex !== undefined) {\n      // Clone the current lot info to avoid direct state mutation\n      setLotInfo(prevLotInfo => {\n        // Deep clone the occupancy array\n        const newOccupancy = prevLotInfo.occupancy.map(floor => [...floor]);\n\n        // Update the spot occupancy (0 = empty, 1 = occupied)\n        newOccupancy[0][spotIndex] = isOccupied ? 1 : 0;\n\n        // Count available spots\n        const flatOccupancy = newOccupancy.flat();\n        const occupied = flatOccupancy.filter(spot => spot === 1).length;\n        const available = flatOccupancy.length - occupied;\n        return {\n          ...prevLotInfo,\n          occupancy: newOccupancy,\n          availableSpots: available\n        };\n      });\n    }\n  };\n\n  /**\r\n   * Toggle the favorite status of the current parking lot\r\n   * using JWT authentication\r\n   */\n  const toggleFavorite = async () => {\n    if (!apiService.isAuthenticated()) {\n      alert('Please log in to save favorites');\n      return;\n    }\n    try {\n      const user = apiService.getUser();\n      const favorites = user.favorites || [];\n      let newFavorites;\n      if (isFavorite) {\n        // Remove from favorites\n        newFavorites = favorites.filter(fav => fav !== Number(id));\n      } else {\n        // Add to favorites\n        newFavorites = [...favorites, Number(id)];\n      }\n\n      // Update favorites in the backend\n      await apiService.updateFavorites(newFavorites);\n\n      // Update local state\n      setIsFavorite(!isFavorite);\n    } catch (error) {\n      console.error('Error updating favorites:', error);\n      alert('Failed to update favorites. Please try again.');\n    }\n  };\n\n  /**\r\n   * Render loading state\r\n   */\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.loadingContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.loadingSpinner\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading parking lot information...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this);\n  }\n\n  /**\r\n   * Render error message if parking lot information is not found\r\n   */\n  if (!lotInfo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.main,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.errorMessage,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Parking lot not found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/parking-lots\",\n            style: styles.backLink,\n            children: \"Back to Parking Lots\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this);\n  }\n\n  /**\r\n   * Render detailed parking lot information\r\n   */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      style: styles.main,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.topBar,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/parking-lots\",\n          style: styles.backLink,\n          children: \"\\u2190 Back to Parking Lots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleFavorite,\n          style: isFavorite ? styles.favoriteButton.active : styles.favoriteButton.default,\n          children: isFavorite ? '★ Favorite' : '☆ Add to Favorites'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.lotHeader,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: styles.lotName,\n          children: lotInfo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.lotStats,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.statItem,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: styles.statLabel,\n              children: \"Available:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: styles.statValue,\n              children: lotInfo.availableSpots\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.statItem,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: styles.statLabel,\n              children: \"Total:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: styles.statValue,\n              children: lotInfo.totalSpots\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.statItem,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: styles.statLabel,\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                ...styles.statusBadge,\n                backgroundColor: lotInfo.availableSpots === 0 ? 'red' : lotInfo.availableSpots < lotInfo.totalSpots / 3 ? 'yellow' : 'green',\n                color: lotInfo.availableSpots < lotInfo.totalSpots / 3 && lotInfo.availableSpots > 0 ? 'black' : 'white'\n              },\n              children: lotInfo.availableSpots === 0 ? 'Full' : lotInfo.availableSpots < lotInfo.totalSpots / 3 ? 'Some Open' : 'Available'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.navigationSection,\n          children: /*#__PURE__*/_jsxDEV(GoogleMapsNavigation, {\n            name: lotInfo.name,\n            coordinates: lotInfo.position,\n            address: lotInfo.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), sensorData && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.sensorStatusContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.sensorStatusHeader,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: styles.sensorStatusTitle,\n            children: \"Live Sensor Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: styles.sensorStatusTime,\n            children: [\"Last updated: \", new Date(sensorData.timestamp).toLocaleTimeString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.sensorStatusInfo,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              ...styles.sensorStatusIndicator,\n              backgroundColor: sensorData.is_occupied ? 'red' : 'green'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Spot 1 is currently \", sensorData.is_occupied ? 'occupied' : 'available']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this), sensorError && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.sensorError,\n          children: sensorError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }, this), lotInfo.floors > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.floorSelector,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: styles.sectionTitle,\n          children: \"Select Floor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.floorButtons,\n          children: Array.from({\n            length: lotInfo.floors\n          }, (_, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              ...styles.floorButton,\n              ...(selectedFloor === i ? styles.activeFloorButton : {})\n            },\n            onClick: () => setSelectedFloor(i),\n            children: [\"Floor \", i + 1]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.floorPlanContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: styles.sectionTitle,\n          children: lotInfo.floors > 1 ? `Floor ${selectedFloor + 1} Plan` : 'Parking Lot Map'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.floorPlan,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.spotGrid,\n            children: lotInfo.occupancy[selectedFloor].map((isOccupied, index) => {\n              // Check if this spot has a sensor connected to it\n              const hasSensor = lotInfo.sensorMappings && Object.values(lotInfo.sensorMappings).includes(index) && selectedFloor === 0; // Sensors are only on floor 1 for demo\n\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  ...styles.parkingSpot,\n                  backgroundColor: isOccupied ? '#FF6B6B' : '#6BFF6B',\n                  ...(hasSensor ? styles.sensorEnabledSpot : {})\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: styles.spotNumber,\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: styles.spotStatus,\n                  children: isOccupied ? 'Occupied' : 'Available'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 21\n                }, this), hasSensor && /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: styles.sensorBadge,\n                  children: \"SENSOR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.legend,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.legendItem,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.legendColor.available\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.legendItem,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.legendColor.occupied\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Occupied\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this), lotInfo.sensorMappings && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.legendItem,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.legendColor.sensor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Sensor-Enabled Spot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.sensorInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: styles.sectionTitle,\n          children: \"Sensor Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.sensorText,\n          children: \"This parking lot is equipped with ultrasonic sensors that detect vehicle presence in real-time. Data is updated every 5 seconds to provide the most accurate information about parking availability.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this), lotInfo.sensorMappings && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.sensorDetail,\n          children: [\"Currently, \", Object.keys(lotInfo.sensorMappings).length, \" sensor\", Object.keys(lotInfo.sensorMappings).length > 1 ? 's are' : ' is', \" active in this lot, monitoring specific parking spots in real-time.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.locationInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: styles.sectionTitle,\n          children: \"Location Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.locationText,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this), \" \", lotInfo.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.locationText,\n          children: \"Use the \\\"Navigate to this Parking Lot\\\" button above to get directions via Google Maps.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 5\n  }, this);\n};\n\n/**\r\n * Component styles\r\n */\n_s(ParkingLotDetail, \"5uyqimk84uy0fhJWc3DlTR1ezj0=\", false, function () {\n  return [useParams];\n});\n_c = ParkingLotDetail;\nconst styles = {\n  container: {\n    backgroundColor: '#800000',\n    // VT Maroon\n    minHeight: '100vh',\n    margin: 0,\n    padding: 0,\n    color: '#FFFFFF',\n    fontFamily: 'Arial, sans-serif'\n  },\n  main: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '20px'\n  },\n  topBar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '90%',\n    marginBottom: '20px'\n  },\n  backLink: {\n    color: '#FFFFFF',\n    textDecoration: 'none',\n    padding: '8px 16px',\n    backgroundColor: '#990000',\n    // Slightly lighter maroon\n    borderRadius: '4px',\n    fontWeight: 'bold'\n  },\n  favoriteButton: {\n    default: {\n      padding: '8px 16px',\n      backgroundColor: '#333333',\n      color: '#FFFFFF',\n      border: 'none',\n      borderRadius: '4px',\n      cursor: 'pointer',\n      fontWeight: 'bold'\n    },\n    active: {\n      padding: '8px 16px',\n      backgroundColor: '#FFD700',\n      // Gold for favorites\n      color: '#333333',\n      border: 'none',\n      borderRadius: '4px',\n      cursor: 'pointer',\n      fontWeight: 'bold'\n    }\n  },\n  lotHeader: {\n    width: '90%',\n    backgroundColor: '#990000',\n    // Slightly lighter maroon\n    padding: '20px',\n    borderRadius: '8px',\n    marginBottom: '20px'\n  },\n  lotName: {\n    margin: '0 0 15px 0',\n    textAlign: 'center'\n  },\n  lotStats: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    marginBottom: '20px'\n  },\n  statItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  statLabel: {\n    fontSize: '14px',\n    marginBottom: '5px'\n  },\n  statValue: {\n    fontSize: '24px',\n    fontWeight: 'bold'\n  },\n  statusBadge: {\n    padding: '5px 10px',\n    borderRadius: '4px',\n    fontWeight: 'bold'\n  },\n  navigationSection: {\n    width: '100%'\n  },\n  sensorStatusContainer: {\n    width: '90%',\n    backgroundColor: '#800080',\n    // Purple to distinguish it\n    padding: '15px',\n    borderRadius: '8px',\n    marginBottom: '20px'\n  },\n  sensorStatusHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '10px'\n  },\n  sensorStatusTitle: {\n    margin: 0,\n    fontSize: '18px'\n  },\n  sensorStatusTime: {\n    fontSize: '14px',\n    opacity: 0.8\n  },\n  sensorStatusInfo: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  sensorStatusIndicator: {\n    width: '20px',\n    height: '20px',\n    borderRadius: '50%',\n    marginRight: '10px'\n  },\n  sensorError: {\n    backgroundColor: 'rgba(255, 0, 0, 0.2)',\n    padding: '5px 10px',\n    borderRadius: '4px',\n    marginTop: '10px',\n    fontSize: '14px'\n  },\n  floorSelector: {\n    width: '90%',\n    backgroundColor: '#EEEEEE',\n    padding: '15px',\n    borderRadius: '8px',\n    marginBottom: '20px',\n    color: '#333333'\n  },\n  sectionTitle: {\n    textAlign: 'center',\n    margin: '0 0 15px 0'\n  },\n  floorButtons: {\n    display: 'flex',\n    justifyContent: 'center',\n    gap: '10px'\n  },\n  floorButton: {\n    padding: '8px 16px',\n    backgroundColor: '#DDDDDD',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    fontWeight: 'bold'\n  },\n  activeFloorButton: {\n    backgroundColor: '#800000',\n    // VT Maroon\n    color: '#FFFFFF'\n  },\n  floorPlanContainer: {\n    width: '90%',\n    backgroundColor: '#EEEEEE',\n    padding: '20px',\n    borderRadius: '8px',\n    marginBottom: '20px',\n    color: '#333333'\n  },\n  floorPlan: {\n    backgroundColor: '#FFFFFF',\n    padding: '20px',\n    borderRadius: '4px'\n  },\n  spotGrid: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(100px, 1fr))',\n    gap: '10px'\n  },\n  parkingSpot: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '60px',\n    borderRadius: '4px',\n    padding: '5px',\n    position: 'relative'\n  },\n  sensorEnabledSpot: {\n    boxShadow: '0 0 8px 2px rgba(128, 0, 128, 0.6)',\n    // Purple glow for sensor spots\n    border: '2px solid #800080' // Purple border\n  },\n  spotNumber: {\n    fontWeight: 'bold',\n    fontSize: '16px'\n  },\n  spotStatus: {\n    fontSize: '12px'\n  },\n  sensorBadge: {\n    position: 'absolute',\n    top: '2px',\n    right: '2px',\n    backgroundColor: '#800080',\n    // Purple\n    color: 'white',\n    fontSize: '8px',\n    padding: '2px 4px',\n    borderRadius: '2px'\n  },\n  legend: {\n    display: 'flex',\n    justifyContent: 'center',\n    gap: '20px',\n    marginTop: '20px'\n  },\n  legendItem: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  legendColor: {\n    available: {\n      width: '20px',\n      height: '20px',\n      backgroundColor: '#6BFF6B',\n      // Light green\n      marginRight: '5px',\n      borderRadius: '3px'\n    },\n    occupied: {\n      width: '20px',\n      height: '20px',\n      backgroundColor: '#FF6B6B',\n      // Light red\n      marginRight: '5px',\n      borderRadius: '3px'\n    },\n    sensor: {\n      width: '20px',\n      height: '20px',\n      backgroundColor: 'white',\n      border: '2px solid #800080',\n      // Purple border\n      boxShadow: '0 0 5px 1px rgba(128, 0, 128, 0.6)',\n      // Purple glow\n      marginRight: '5px',\n      borderRadius: '3px'\n    }\n  },\n  sensorInfo: {\n    width: '90%',\n    backgroundColor: '#EEEEEE',\n    padding: '20px',\n    borderRadius: '8px',\n    color: '#333333',\n    marginBottom: '20px'\n  },\n  sensorText: {\n    textAlign: 'center',\n    lineHeight: '1.6'\n  },\n  sensorDetail: {\n    textAlign: 'center',\n    lineHeight: '1.6',\n    fontWeight: 'bold',\n    color: '#800080',\n    // Purple\n    marginTop: '10px'\n  },\n  locationInfo: {\n    width: '90%',\n    backgroundColor: '#EEEEEE',\n    padding: '20px',\n    borderRadius: '8px',\n    color: '#333333'\n  },\n  locationText: {\n    textAlign: 'center',\n    lineHeight: '1.6',\n    margin: '5px 0'\n  },\n  errorMessage: {\n    backgroundColor: '#FFDDDD',\n    // Light red\n    padding: '20px',\n    borderRadius: '8px',\n    color: '#800000',\n    // VT Maroon\n    textAlign: 'center'\n  },\n  loadingContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '80vh',\n    color: '#FFFFFF'\n  },\n  loadingSpinner: {\n    width: '40px',\n    height: '40px',\n    border: '4px solid rgba(255, 255, 255, 0.3)',\n    borderRadius: '50%',\n    borderTop: '4px solid #FFFFFF',\n    animation: 'spin 1s linear infinite',\n    marginBottom: '15px'\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"ParkingLotDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","Header","GoogleMapsNavigation","apiService","jsxDEV","_jsxDEV","parkingLotData","name","totalSpots","availableSpots","floors","spotsPerFloor","position","address","occupancy","Array","fill","sensorMappings","ParkingLotDetail","_s","id","selectedFloor","setSelectedFloor","lotInfo","setLotInfo","isFavorite","setIsFavorite","sensorData","setSensorData","sensorError","setSensorError","isLoading","setIsLoading","lotData","isAuthenticated","user","getUser","favorites","includes","Number","sensors","Object","keys","length","pollSensorData","sensorId","data","getSensorData","updateOccupancyFromSensor","is_occupied","error","console","intervalId","setInterval","clearInterval","isOccupied","spotIndex","undefined","prevLotInfo","newOccupancy","map","floor","flatOccupancy","flat","occupied","filter","spot","available","toggleFavorite","alert","newFavorites","fav","updateFavorites","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","loadingContainer","loadingSpinner","main","errorMessage","to","backLink","topBar","onClick","favoriteButton","active","default","lotHeader","lotName","lotStats","statItem","statLabel","statValue","statusBadge","backgroundColor","color","navigationSection","coordinates","sensorStatusContainer","sensorStatusHeader","sensorStatusTitle","sensorStatusTime","Date","timestamp","toLocaleTimeString","sensorStatusInfo","sensorStatusIndicator","floorSelector","sectionTitle","floorButtons","from","_","i","floorButton","activeFloorButton","floorPlanContainer","floorPlan","spotGrid","index","hasSensor","values","parkingSpot","sensorEnabledSpot","spotNumber","spotStatus","sensorBadge","legend","legendItem","legendColor","sensor","sensorInfo","sensorText","sensorDetail","locationInfo","locationText","_c","minHeight","margin","padding","fontFamily","display","flexDirection","alignItems","justifyContent","width","marginBottom","textDecoration","borderRadius","fontWeight","border","cursor","textAlign","fontSize","opacity","height","marginRight","marginTop","gap","gridTemplateColumns","boxShadow","top","right","lineHeight","borderTop","animation","$RefreshReg$"],"sources":["C:/Users/yugio/OneDrive/Desktop/Capstone/VT-Parking-Finder/src/components/ParkingLotDetail.jsx"],"sourcesContent":["/**\r\n * ParkingLotDetail.jsx\r\n * \r\n * Enhanced component with improved sensor data integration.\r\n * This component displays detailed information about a specific parking lot,\r\n * including real-time sensor data for parking spot occupancy.\r\n * \r\n * Features:\r\n * - Real-time polling of sensor data from the backend\r\n * - Visually updates parking spot status based on sensor data\r\n * - Error handling for sensor data retrieval\r\n * - JWT authentication for favorites functionality\r\n * - Improved loading states for better UX\r\n * \r\n * @author VT Parking Finder Team\r\n * @version 2.0.0\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport GoogleMapsNavigation from './GoogleMapsNavigation';\r\nimport apiService from '../services/apiService';\r\n\r\n/**\r\n * Mock data for parking lots - in production, this would come from an API\r\n */\r\nconst parkingLotData = {\r\n  1: {\r\n    name: 'Perry Street Garage',\r\n    totalSpots: 120,\r\n    availableSpots: 45,\r\n    floors: 4,\r\n    spotsPerFloor: 30,\r\n    position: [37.2312, -80.4263],\r\n    address: '155 Perry St, Blacksburg, VA 24061',\r\n    // Mock occupancy data\r\n    occupancy: [\r\n      // Floor 1\r\n      [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1],\r\n      // Floor 2\r\n      [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1],\r\n      // Floor 3\r\n      [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\r\n      // Floor 4\r\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],\r\n    ]\r\n  },\r\n  2: {\r\n    name: 'Cassell Lot',\r\n    totalSpots: 80,\r\n    availableSpots: 0,\r\n    floors: 1,\r\n    spotsPerFloor: 80,\r\n    position: [37.2214, -80.4205],\r\n    address: '675 Washington St, Blacksburg, VA 24061',\r\n    // All spots occupied\r\n    occupancy: [\r\n      Array(80).fill(1)\r\n    ]\r\n  },\r\n  3: {\r\n    name: 'Litton Reaves',\r\n    totalSpots: 60,\r\n    availableSpots: 35,\r\n    floors: 1,\r\n    spotsPerFloor: 60,\r\n    position: [37.2220, -80.4267],\r\n    address: 'Litton Reaves Hall, Blacksburg, VA 24061',\r\n    occupancy: [\r\n      // Mix of available and occupied spots\r\n      [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0,\r\n       0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,\r\n       0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0]\r\n    ]\r\n  },\r\n  4: {\r\n    name: 'Squires',\r\n    totalSpots: 40,\r\n    availableSpots: 5,\r\n    floors: 1,\r\n    spotsPerFloor: 40,\r\n    position: [37.2291, -80.4168],\r\n    address: 'Squires Student Center, 290 College Ave, Blacksburg, VA 24060',\r\n    occupancy: [\r\n      // Mostly occupied with few available spots\r\n      [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\r\n       1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1]\r\n    ],\r\n    // Indicate which spot is connected to a sensor\r\n    sensorMappings: {\r\n      '1': 0 // Sensor ID 1 maps to spot index 0\r\n    }\r\n  },\r\n  5: {\r\n    name: 'Architecture Annex',\r\n    totalSpots: 30,\r\n    availableSpots: 20,\r\n    floors: 1,\r\n    spotsPerFloor: 30,\r\n    position: [37.2283, -80.4158],\r\n    address: 'Architecture Annex, Blacksburg, VA 24061',\r\n    occupancy: [\r\n      // Mostly available\r\n      [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,\r\n       1, 0, 0, 0, 1, 0, 0, 0, 0, 1]\r\n    ]\r\n  }\r\n};\r\n\r\n/**\r\n * Component that displays detailed information about a specific parking lot\r\n * with real-time sensor updates\r\n * \r\n * @returns {JSX.Element} The rendered parking lot detail view\r\n */\r\nconst ParkingLotDetail = () => {\r\n  // Get the parking lot ID from URL parameters\r\n  const { id } = useParams();\r\n  \r\n  // State management\r\n  const [selectedFloor, setSelectedFloor] = useState(0); // Default to first floor\r\n  const [lotInfo, setLotInfo] = useState(null);\r\n  const [isFavorite, setIsFavorite] = useState(false);\r\n  const [sensorData, setSensorData] = useState(null);\r\n  const [sensorError, setSensorError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  /**\r\n   * Load parking lot information and check favorite status\r\n   * on component mount\r\n   */\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    \r\n    // Get lot info from mock data\r\n    const lotData = parkingLotData[id];\r\n    if (lotData) {\r\n      setLotInfo(lotData);\r\n      \r\n      // Check if this lot is in user favorites using JWT auth\r\n      if (apiService.isAuthenticated()) {\r\n        const user = apiService.getUser();\r\n        if (user && user.favorites) {\r\n          setIsFavorite(user.favorites.includes(Number(id)));\r\n        }\r\n      }\r\n    }\r\n    \r\n    setIsLoading(false);\r\n  }, [id]);\r\n\r\n  /**\r\n   * Poll sensor data for applicable parking lots\r\n   */\r\n  useEffect(() => {\r\n    // Only run this polling for lots with sensor mappings\r\n    if (lotInfo && lotInfo.sensorMappings) {\r\n      const sensors = Object.keys(lotInfo.sensorMappings);\r\n      \r\n      if (sensors.length > 0) {\r\n        // Set up polling for sensor data\r\n        const pollSensorData = async () => {\r\n          try {\r\n            setSensorError(null);\r\n            \r\n            // For demo purposes, we're only using sensor ID 1\r\n            // In production, you would fetch data for all sensors\r\n            const sensorId = 1;\r\n            const data = await apiService.getSensorData(sensorId);\r\n            \r\n            if (data) {\r\n              setSensorData(data);\r\n              \r\n              // Update the occupancy state based on sensor data\r\n              updateOccupancyFromSensor(sensorId, data.is_occupied);\r\n            }\r\n          } catch (error) {\r\n            console.error('Error fetching sensor data:', error);\r\n            setSensorError('Unable to fetch real-time sensor data');\r\n          }\r\n        };\r\n        \r\n        // Initial fetch\r\n        pollSensorData();\r\n        \r\n        // Set up polling interval (every 5 seconds)\r\n        const intervalId = setInterval(pollSensorData, 5000);\r\n        \r\n        // Clean up interval on component unmount\r\n        return () => clearInterval(intervalId);\r\n      }\r\n    }\r\n  }, [lotInfo, id]);\r\n\r\n  /**\r\n   * Update the occupancy state based on sensor data\r\n   * \r\n   * @param {string} sensorId - The ID of the sensor\r\n   * @param {boolean} isOccupied - Whether the spot is occupied\r\n   */\r\n  const updateOccupancyFromSensor = (sensorId, isOccupied) => {\r\n    if (!lotInfo || !lotInfo.sensorMappings) return;\r\n    \r\n    // Get the spot index for this sensor\r\n    const spotIndex = lotInfo.sensorMappings[sensorId];\r\n    \r\n    if (spotIndex !== undefined) {\r\n      // Clone the current lot info to avoid direct state mutation\r\n      setLotInfo(prevLotInfo => {\r\n        // Deep clone the occupancy array\r\n        const newOccupancy = prevLotInfo.occupancy.map(floor => [...floor]);\r\n        \r\n        // Update the spot occupancy (0 = empty, 1 = occupied)\r\n        newOccupancy[0][spotIndex] = isOccupied ? 1 : 0;\r\n        \r\n        // Count available spots\r\n        const flatOccupancy = newOccupancy.flat();\r\n        const occupied = flatOccupancy.filter(spot => spot === 1).length;\r\n        const available = flatOccupancy.length - occupied;\r\n        \r\n        return {\r\n          ...prevLotInfo,\r\n          occupancy: newOccupancy,\r\n          availableSpots: available\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Toggle the favorite status of the current parking lot\r\n   * using JWT authentication\r\n   */\r\n  const toggleFavorite = async () => {\r\n    if (!apiService.isAuthenticated()) {\r\n      alert('Please log in to save favorites');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const user = apiService.getUser();\r\n      const favorites = user.favorites || [];\r\n      let newFavorites;\r\n      \r\n      if (isFavorite) {\r\n        // Remove from favorites\r\n        newFavorites = favorites.filter(fav => fav !== Number(id));\r\n      } else {\r\n        // Add to favorites\r\n        newFavorites = [...favorites, Number(id)];\r\n      }\r\n      \r\n      // Update favorites in the backend\r\n      await apiService.updateFavorites(newFavorites);\r\n      \r\n      // Update local state\r\n      setIsFavorite(!isFavorite);\r\n    } catch (error) {\r\n      console.error('Error updating favorites:', error);\r\n      alert('Failed to update favorites. Please try again.');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Render loading state\r\n   */\r\n  if (isLoading) {\r\n    return (\r\n      <div style={styles.container}>\r\n        <Header />\r\n        <div style={styles.loadingContainer}>\r\n          <div style={styles.loadingSpinner}></div>\r\n          <p>Loading parking lot information...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Render error message if parking lot information is not found\r\n   */\r\n  if (!lotInfo) {\r\n    return (\r\n      <div style={styles.container}>\r\n        <Header />\r\n        <div style={styles.main}>\r\n          <div style={styles.errorMessage}>\r\n            <h2>Parking lot not found</h2>\r\n            <Link to=\"/parking-lots\" style={styles.backLink}>Back to Parking Lots</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Render detailed parking lot information\r\n   */\r\n  return (\r\n    <div style={styles.container}>\r\n      <Header />\r\n      <main style={styles.main}>\r\n        {/* Navigation and favorite button */}\r\n        <div style={styles.topBar}>\r\n          <Link to=\"/parking-lots\" style={styles.backLink}>\r\n            &larr; Back to Parking Lots\r\n          </Link>\r\n          <button \r\n            onClick={toggleFavorite} \r\n            style={isFavorite ? styles.favoriteButton.active : styles.favoriteButton.default}\r\n          >\r\n            {isFavorite ? '★ Favorite' : '☆ Add to Favorites'}\r\n          </button>\r\n        </div>\r\n        \r\n        {/* Lot header with key information */}\r\n        <div style={styles.lotHeader}>\r\n          <h1 style={styles.lotName}>{lotInfo.name}</h1>\r\n          <div style={styles.lotStats}>\r\n            <div style={styles.statItem}>\r\n              <span style={styles.statLabel}>Available:</span>\r\n              <span style={styles.statValue}>{lotInfo.availableSpots}</span>\r\n            </div>\r\n            <div style={styles.statItem}>\r\n              <span style={styles.statLabel}>Total:</span>\r\n              <span style={styles.statValue}>{lotInfo.totalSpots}</span>\r\n            </div>\r\n            <div style={styles.statItem}>\r\n              <span style={styles.statLabel}>Status:</span>\r\n              <span \r\n                style={{\r\n                  ...styles.statusBadge,\r\n                  backgroundColor: \r\n                    lotInfo.availableSpots === 0 ? 'red' : \r\n                    lotInfo.availableSpots < lotInfo.totalSpots / 3 ? 'yellow' : 'green',\r\n                  color: lotInfo.availableSpots < lotInfo.totalSpots / 3 && lotInfo.availableSpots > 0 ? 'black' : 'white'\r\n                }}\r\n              >\r\n                {lotInfo.availableSpots === 0 ? 'Full' : \r\n                  lotInfo.availableSpots < lotInfo.totalSpots / 3 ? 'Some Open' : 'Available'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Google Maps Navigation Button */}\r\n          <div style={styles.navigationSection}>\r\n            <GoogleMapsNavigation \r\n              name={lotInfo.name}\r\n              coordinates={lotInfo.position}\r\n              address={lotInfo.address}\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Sensor status indicator (if applicable) */}\r\n        {sensorData && (\r\n          <div style={styles.sensorStatusContainer}>\r\n            <div style={styles.sensorStatusHeader}>\r\n              <h3 style={styles.sensorStatusTitle}>Live Sensor Status</h3>\r\n              <span style={styles.sensorStatusTime}>\r\n                Last updated: {new Date(sensorData.timestamp).toLocaleTimeString()}\r\n              </span>\r\n            </div>\r\n            <div style={styles.sensorStatusInfo}>\r\n              <div \r\n                style={{\r\n                  ...styles.sensorStatusIndicator,\r\n                  backgroundColor: sensorData.is_occupied ? 'red' : 'green'\r\n                }}\r\n              ></div>\r\n              <span>\r\n                Spot 1 is currently {sensorData.is_occupied ? 'occupied' : 'available'}\r\n              </span>\r\n            </div>\r\n            {sensorError && (\r\n              <div style={styles.sensorError}>{sensorError}</div>\r\n            )}\r\n          </div>\r\n        )}\r\n        \r\n        {/* Floor selector for multi-level garages */}\r\n        {lotInfo.floors > 1 && (\r\n          <div style={styles.floorSelector}>\r\n            <h3 style={styles.sectionTitle}>Select Floor</h3>\r\n            <div style={styles.floorButtons}>\r\n              {Array.from({ length: lotInfo.floors }, (_, i) => (\r\n                <button\r\n                  key={i}\r\n                  style={{\r\n                    ...styles.floorButton,\r\n                    ...(selectedFloor === i ? styles.activeFloorButton : {})\r\n                  }}\r\n                  onClick={() => setSelectedFloor(i)}\r\n                >\r\n                  Floor {i + 1}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {/* Floor plan with parking spot grid */}\r\n        <div style={styles.floorPlanContainer}>\r\n          <h3 style={styles.sectionTitle}>\r\n            {lotInfo.floors > 1 ? `Floor ${selectedFloor + 1} Plan` : 'Parking Lot Map'}\r\n          </h3>\r\n          <div style={styles.floorPlan}>\r\n            <div style={styles.spotGrid}>\r\n              {lotInfo.occupancy[selectedFloor].map((isOccupied, index) => {\r\n                // Check if this spot has a sensor connected to it\r\n                const hasSensor = lotInfo.sensorMappings && \r\n                  Object.values(lotInfo.sensorMappings).includes(index) &&\r\n                  selectedFloor === 0; // Sensors are only on floor 1 for demo\r\n                \r\n                return (\r\n                  <div\r\n                    key={index}\r\n                    style={{\r\n                      ...styles.parkingSpot,\r\n                      backgroundColor: isOccupied ? '#FF6B6B' : '#6BFF6B',\r\n                      ...(hasSensor ? styles.sensorEnabledSpot : {})\r\n                    }}\r\n                  >\r\n                    <span style={styles.spotNumber}>{index + 1}</span>\r\n                    <span style={styles.spotStatus}>\r\n                      {isOccupied ? 'Occupied' : 'Available'}\r\n                    </span>\r\n                    {hasSensor && (\r\n                      <span style={styles.sensorBadge}>SENSOR</span>\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Legend for parking spot colors */}\r\n          <div style={styles.legend}>\r\n            <div style={styles.legendItem}>\r\n              <div style={styles.legendColor.available}></div>\r\n              <span>Available</span>\r\n            </div>\r\n            <div style={styles.legendItem}>\r\n              <div style={styles.legendColor.occupied}></div>\r\n              <span>Occupied</span>\r\n            </div>\r\n            {lotInfo.sensorMappings && (\r\n              <div style={styles.legendItem}>\r\n                <div style={styles.legendColor.sensor}></div>\r\n                <span>Sensor-Enabled Spot</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Sensor information section */}\r\n        <div style={styles.sensorInfo}>\r\n          <h3 style={styles.sectionTitle}>Sensor Information</h3>\r\n          <p style={styles.sensorText}>\r\n            This parking lot is equipped with ultrasonic sensors that detect vehicle presence in real-time.\r\n            Data is updated every 5 seconds to provide the most accurate information about parking availability.\r\n          </p>\r\n          {lotInfo.sensorMappings && (\r\n            <p style={styles.sensorDetail}>\r\n              Currently, {Object.keys(lotInfo.sensorMappings).length} sensor{Object.keys(lotInfo.sensorMappings).length > 1 ? 's are' : ' is'} active in this lot, monitoring specific parking spots in real-time.\r\n            </p>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Location information section */}\r\n        <div style={styles.locationInfo}>\r\n          <h3 style={styles.sectionTitle}>Location Information</h3>\r\n          <p style={styles.locationText}>\r\n            <strong>Address:</strong> {lotInfo.address}\r\n          </p>\r\n          <p style={styles.locationText}>\r\n            Use the \"Navigate to this Parking Lot\" button above to get directions via Google Maps.\r\n          </p>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * Component styles\r\n */\r\nconst styles = {\r\n  container: {\r\n    backgroundColor: '#800000', // VT Maroon\r\n    minHeight: '100vh',\r\n    margin: 0,\r\n    padding: 0,\r\n    color: '#FFFFFF',\r\n    fontFamily: 'Arial, sans-serif',\r\n  },\r\n  main: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n  },\r\n  topBar: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    width: '90%',\r\n    marginBottom: '20px',\r\n  },\r\n  backLink: {\r\n    color: '#FFFFFF',\r\n    textDecoration: 'none',\r\n    padding: '8px 16px',\r\n    backgroundColor: '#990000', // Slightly lighter maroon\r\n    borderRadius: '4px',\r\n    fontWeight: 'bold',\r\n  },\r\n  favoriteButton: {\r\n    default: {\r\n      padding: '8px 16px',\r\n      backgroundColor: '#333333',\r\n      color: '#FFFFFF',\r\n      border: 'none',\r\n      borderRadius: '4px',\r\n      cursor: 'pointer',\r\n      fontWeight: 'bold',\r\n    },\r\n    active: {\r\n      padding: '8px 16px',\r\n      backgroundColor: '#FFD700', // Gold for favorites\r\n      color: '#333333',\r\n      border: 'none',\r\n      borderRadius: '4px',\r\n      cursor: 'pointer',\r\n      fontWeight: 'bold',\r\n    }\r\n  },\r\n  lotHeader: {\r\n    width: '90%',\r\n    backgroundColor: '#990000', // Slightly lighter maroon\r\n    padding: '20px',\r\n    borderRadius: '8px',\r\n    marginBottom: '20px',\r\n  },\r\n  lotName: {\r\n    margin: '0 0 15px 0',\r\n    textAlign: 'center',\r\n  },\r\n  lotStats: {\r\n    display: 'flex',\r\n    justifyContent: 'space-around',\r\n    marginBottom: '20px',\r\n  },\r\n  statItem: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  statLabel: {\r\n    fontSize: '14px',\r\n    marginBottom: '5px',\r\n  },\r\n  statValue: {\r\n    fontSize: '24px',\r\n    fontWeight: 'bold',\r\n  },\r\n  statusBadge: {\r\n    padding: '5px 10px',\r\n    borderRadius: '4px',\r\n    fontWeight: 'bold',\r\n  },\r\n  navigationSection: {\r\n    width: '100%',\r\n  },\r\n  sensorStatusContainer: {\r\n    width: '90%',\r\n    backgroundColor: '#800080', // Purple to distinguish it\r\n    padding: '15px',\r\n    borderRadius: '8px',\r\n    marginBottom: '20px',\r\n  },\r\n  sensorStatusHeader: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: '10px',\r\n  },\r\n  sensorStatusTitle: {\r\n    margin: 0,\r\n    fontSize: '18px',\r\n  },\r\n  sensorStatusTime: {\r\n    fontSize: '14px',\r\n    opacity: 0.8,\r\n  },\r\n  sensorStatusInfo: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  sensorStatusIndicator: {\r\n    width: '20px',\r\n    height: '20px',\r\n    borderRadius: '50%',\r\n    marginRight: '10px',\r\n  },\r\n  sensorError: {\r\n    backgroundColor: 'rgba(255, 0, 0, 0.2)',\r\n    padding: '5px 10px',\r\n    borderRadius: '4px',\r\n    marginTop: '10px',\r\n    fontSize: '14px',\r\n  },\r\n  floorSelector: {\r\n    width: '90%',\r\n    backgroundColor: '#EEEEEE',\r\n    padding: '15px',\r\n    borderRadius: '8px',\r\n    marginBottom: '20px',\r\n    color: '#333333',\r\n  },\r\n  sectionTitle: {\r\n    textAlign: 'center',\r\n    margin: '0 0 15px 0',\r\n  },\r\n  floorButtons: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    gap: '10px',\r\n  },\r\n  floorButton: {\r\n    padding: '8px 16px',\r\n    backgroundColor: '#DDDDDD',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n    fontWeight: 'bold',\r\n  },\r\n  activeFloorButton: {\r\n    backgroundColor: '#800000', // VT Maroon\r\n    color: '#FFFFFF',\r\n  },\r\n  floorPlanContainer: {\r\n    width: '90%',\r\n    backgroundColor: '#EEEEEE',\r\n    padding: '20px',\r\n    borderRadius: '8px',\r\n    marginBottom: '20px',\r\n    color: '#333333',\r\n  },\r\n  floorPlan: {\r\n    backgroundColor: '#FFFFFF',\r\n    padding: '20px',\r\n    borderRadius: '4px',\r\n  },\r\n  spotGrid: {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(auto-fill, minmax(100px, 1fr))',\r\n    gap: '10px',\r\n  },\r\n  parkingSpot: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '60px',\r\n    borderRadius: '4px',\r\n    padding: '5px',\r\n    position: 'relative',\r\n  },\r\n  sensorEnabledSpot: {\r\n    boxShadow: '0 0 8px 2px rgba(128, 0, 128, 0.6)', // Purple glow for sensor spots\r\n    border: '2px solid #800080', // Purple border\r\n  },\r\n  spotNumber: {\r\n    fontWeight: 'bold',\r\n    fontSize: '16px',\r\n  },\r\n  spotStatus: {\r\n    fontSize: '12px',\r\n  },\r\n  sensorBadge: {\r\n    position: 'absolute',\r\n    top: '2px',\r\n    right: '2px',\r\n    backgroundColor: '#800080', // Purple\r\n    color: 'white',\r\n    fontSize: '8px',\r\n    padding: '2px 4px',\r\n    borderRadius: '2px',\r\n  },\r\n  legend: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    gap: '20px',\r\n    marginTop: '20px',\r\n  },\r\n  legendItem: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  legendColor: {\r\n    available: {\r\n      width: '20px',\r\n      height: '20px',\r\n      backgroundColor: '#6BFF6B', // Light green\r\n      marginRight: '5px',\r\n      borderRadius: '3px',\r\n    },\r\n    occupied: {\r\n      width: '20px',\r\n      height: '20px',\r\n      backgroundColor: '#FF6B6B', // Light red\r\n      marginRight: '5px',\r\n      borderRadius: '3px',\r\n    },\r\n    sensor: {\r\n      width: '20px',\r\n      height: '20px',\r\n      backgroundColor: 'white',\r\n      border: '2px solid #800080', // Purple border\r\n      boxShadow: '0 0 5px 1px rgba(128, 0, 128, 0.6)', // Purple glow\r\n      marginRight: '5px',\r\n      borderRadius: '3px',\r\n    }\r\n  },\r\n  sensorInfo: {\r\n    width: '90%',\r\n    backgroundColor: '#EEEEEE',\r\n    padding: '20px',\r\n    borderRadius: '8px',\r\n    color: '#333333',\r\n    marginBottom: '20px',\r\n  },\r\n  sensorText: {\r\n    textAlign: 'center',\r\n    lineHeight: '1.6',\r\n  },\r\n  sensorDetail: {\r\n    textAlign: 'center',\r\n    lineHeight: '1.6',\r\n    fontWeight: 'bold',\r\n    color: '#800080', // Purple\r\n    marginTop: '10px',\r\n  },\r\n  locationInfo: {\r\n    width: '90%',\r\n    backgroundColor: '#EEEEEE',\r\n    padding: '20px',\r\n    borderRadius: '8px',\r\n    color: '#333333',\r\n  },\r\n  locationText: {\r\n    textAlign: 'center',\r\n    lineHeight: '1.6',\r\n    margin: '5px 0',\r\n  },\r\n  errorMessage: {\r\n    backgroundColor: '#FFDDDD', // Light red\r\n    padding: '20px',\r\n    borderRadius: '8px',\r\n    color: '#800000', // VT Maroon\r\n    textAlign: 'center',\r\n  },\r\n  loadingContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '80vh',\r\n    color: '#FFFFFF',\r\n  },\r\n  loadingSpinner: {\r\n    width: '40px',\r\n    height: '40px',\r\n    border: '4px solid rgba(255, 255, 255, 0.3)',\r\n    borderRadius: '50%',\r\n    borderTop: '4px solid #FFFFFF',\r\n    animation: 'spin 1s linear infinite',\r\n    marginBottom: '15px',\r\n  },\r\n};"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,oBAAoB,MAAM,wBAAwB;AACzD,OAAOC,UAAU,MAAM,wBAAwB;;AAE/C;AACA;AACA;AAFA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,cAAc,GAAG;EACrB,CAAC,EAAE;IACDC,IAAI,EAAE,qBAAqB;IAC3BC,UAAU,EAAE,GAAG;IACfC,cAAc,EAAE,EAAE;IAClBC,MAAM,EAAE,CAAC;IACTC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;IAC7BC,OAAO,EAAE,oCAAoC;IAC7C;IACAC,SAAS,EAAE;IACT;IACA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC1F;IACA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC1F;IACA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC1F;IACA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAE9F,CAAC;EACD,CAAC,EAAE;IACDP,IAAI,EAAE,aAAa;IACnBC,UAAU,EAAE,EAAE;IACdC,cAAc,EAAE,CAAC;IACjBC,MAAM,EAAE,CAAC;IACTC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;IAC7BC,OAAO,EAAE,yCAAyC;IAClD;IACAC,SAAS,EAAE,CACTC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EAErB,CAAC;EACD,CAAC,EAAE;IACDT,IAAI,EAAE,eAAe;IACrBC,UAAU,EAAE,EAAE;IACdC,cAAc,EAAE,EAAE;IAClBC,MAAM,EAAE,CAAC;IACTC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;IAC7BC,OAAO,EAAE,0CAA0C;IACnDC,SAAS,EAAE;IACT;IACA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC1D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC1D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAEhE,CAAC;EACD,CAAC,EAAE;IACDP,IAAI,EAAE,SAAS;IACfC,UAAU,EAAE,EAAE;IACdC,cAAc,EAAE,CAAC;IACjBC,MAAM,EAAE,CAAC;IACTC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;IAC7BC,OAAO,EAAE,+DAA+D;IACxEC,SAAS,EAAE;IACT;IACA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC1D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAC7D;IACD;IACAG,cAAc,EAAE;MACd,GAAG,EAAE,CAAC,CAAC;IACT;EACF,CAAC;EACD,CAAC,EAAE;IACDV,IAAI,EAAE,oBAAoB;IAC1BC,UAAU,EAAE,EAAE;IACdC,cAAc,EAAE,EAAE;IAClBC,MAAM,EAAE,CAAC;IACTC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC;IAC7BC,OAAO,EAAE,0CAA0C;IACnDC,SAAS,EAAE;IACT;IACA,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAC1D,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAElC;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B;EACA,MAAM;IAAEC;EAAG,CAAC,GAAGrB,SAAS,CAAC,CAAC;;EAE1B;EACA,MAAM,CAACsB,aAAa,EAAEC,gBAAgB,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACvD,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC4B,UAAU,EAAEC,aAAa,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC8B,UAAU,EAAEC,aAAa,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACgC,WAAW,EAAEC,cAAc,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACkC,SAAS,EAAEC,YAAY,CAAC,GAAGnC,QAAQ,CAAC,IAAI,CAAC;;EAEhD;AACF;AACA;AACA;EACEC,SAAS,CAAC,MAAM;IACdkC,YAAY,CAAC,IAAI,CAAC;;IAElB;IACA,MAAMC,OAAO,GAAG3B,cAAc,CAACc,EAAE,CAAC;IAClC,IAAIa,OAAO,EAAE;MACXT,UAAU,CAACS,OAAO,CAAC;;MAEnB;MACA,IAAI9B,UAAU,CAAC+B,eAAe,CAAC,CAAC,EAAE;QAChC,MAAMC,IAAI,GAAGhC,UAAU,CAACiC,OAAO,CAAC,CAAC;QACjC,IAAID,IAAI,IAAIA,IAAI,CAACE,SAAS,EAAE;UAC1BX,aAAa,CAACS,IAAI,CAACE,SAAS,CAACC,QAAQ,CAACC,MAAM,CAACnB,EAAE,CAAC,CAAC,CAAC;QACpD;MACF;IACF;IAEAY,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,CAACZ,EAAE,CAAC,CAAC;;EAER;AACF;AACA;EACEtB,SAAS,CAAC,MAAM;IACd;IACA,IAAIyB,OAAO,IAAIA,OAAO,CAACN,cAAc,EAAE;MACrC,MAAMuB,OAAO,GAAGC,MAAM,CAACC,IAAI,CAACnB,OAAO,CAACN,cAAc,CAAC;MAEnD,IAAIuB,OAAO,CAACG,MAAM,GAAG,CAAC,EAAE;QACtB;QACA,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;UACjC,IAAI;YACFd,cAAc,CAAC,IAAI,CAAC;;YAEpB;YACA;YACA,MAAMe,QAAQ,GAAG,CAAC;YAClB,MAAMC,IAAI,GAAG,MAAM3C,UAAU,CAAC4C,aAAa,CAACF,QAAQ,CAAC;YAErD,IAAIC,IAAI,EAAE;cACRlB,aAAa,CAACkB,IAAI,CAAC;;cAEnB;cACAE,yBAAyB,CAACH,QAAQ,EAAEC,IAAI,CAACG,WAAW,CAAC;YACvD;UACF,CAAC,CAAC,OAAOC,KAAK,EAAE;YACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;YACnDpB,cAAc,CAAC,uCAAuC,CAAC;UACzD;QACF,CAAC;;QAED;QACAc,cAAc,CAAC,CAAC;;QAEhB;QACA,MAAMQ,UAAU,GAAGC,WAAW,CAACT,cAAc,EAAE,IAAI,CAAC;;QAEpD;QACA,OAAO,MAAMU,aAAa,CAACF,UAAU,CAAC;MACxC;IACF;EACF,CAAC,EAAE,CAAC7B,OAAO,EAAEH,EAAE,CAAC,CAAC;;EAEjB;AACF;AACA;AACA;AACA;AACA;EACE,MAAM4B,yBAAyB,GAAGA,CAACH,QAAQ,EAAEU,UAAU,KAAK;IAC1D,IAAI,CAAChC,OAAO,IAAI,CAACA,OAAO,CAACN,cAAc,EAAE;;IAEzC;IACA,MAAMuC,SAAS,GAAGjC,OAAO,CAACN,cAAc,CAAC4B,QAAQ,CAAC;IAElD,IAAIW,SAAS,KAAKC,SAAS,EAAE;MAC3B;MACAjC,UAAU,CAACkC,WAAW,IAAI;QACxB;QACA,MAAMC,YAAY,GAAGD,WAAW,CAAC5C,SAAS,CAAC8C,GAAG,CAACC,KAAK,IAAI,CAAC,GAAGA,KAAK,CAAC,CAAC;;QAEnE;QACAF,YAAY,CAAC,CAAC,CAAC,CAACH,SAAS,CAAC,GAAGD,UAAU,GAAG,CAAC,GAAG,CAAC;;QAE/C;QACA,MAAMO,aAAa,GAAGH,YAAY,CAACI,IAAI,CAAC,CAAC;QACzC,MAAMC,QAAQ,GAAGF,aAAa,CAACG,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAK,CAAC,CAAC,CAACvB,MAAM;QAChE,MAAMwB,SAAS,GAAGL,aAAa,CAACnB,MAAM,GAAGqB,QAAQ;QAEjD,OAAO;UACL,GAAGN,WAAW;UACd5C,SAAS,EAAE6C,YAAY;UACvBlD,cAAc,EAAE0D;QAClB,CAAC;MACH,CAAC,CAAC;IACJ;EACF,CAAC;;EAED;AACF;AACA;AACA;EACE,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAACjE,UAAU,CAAC+B,eAAe,CAAC,CAAC,EAAE;MACjCmC,KAAK,CAAC,iCAAiC,CAAC;MACxC;IACF;IAEA,IAAI;MACF,MAAMlC,IAAI,GAAGhC,UAAU,CAACiC,OAAO,CAAC,CAAC;MACjC,MAAMC,SAAS,GAAGF,IAAI,CAACE,SAAS,IAAI,EAAE;MACtC,IAAIiC,YAAY;MAEhB,IAAI7C,UAAU,EAAE;QACd;QACA6C,YAAY,GAAGjC,SAAS,CAAC4B,MAAM,CAACM,GAAG,IAAIA,GAAG,KAAKhC,MAAM,CAACnB,EAAE,CAAC,CAAC;MAC5D,CAAC,MAAM;QACL;QACAkD,YAAY,GAAG,CAAC,GAAGjC,SAAS,EAAEE,MAAM,CAACnB,EAAE,CAAC,CAAC;MAC3C;;MAEA;MACA,MAAMjB,UAAU,CAACqE,eAAe,CAACF,YAAY,CAAC;;MAE9C;MACA5C,aAAa,CAAC,CAACD,UAAU,CAAC;IAC5B,CAAC,CAAC,OAAOyB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDmB,KAAK,CAAC,+CAA+C,CAAC;IACxD;EACF,CAAC;;EAED;AACF;AACA;EACE,IAAItC,SAAS,EAAE;IACb,oBACE1B,OAAA;MAAKoE,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAC,QAAA,gBAC3BvE,OAAA,CAACJ,MAAM;QAAA4E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACV3E,OAAA;QAAKoE,KAAK,EAAEC,MAAM,CAACO,gBAAiB;QAAAL,QAAA,gBAClCvE,OAAA;UAAKoE,KAAK,EAAEC,MAAM,CAACQ;QAAe;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACzC3E,OAAA;UAAAuE,QAAA,EAAG;QAAkC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;;EAEA;AACF;AACA;EACE,IAAI,CAACzD,OAAO,EAAE;IACZ,oBACElB,OAAA;MAAKoE,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAC,QAAA,gBAC3BvE,OAAA,CAACJ,MAAM;QAAA4E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACV3E,OAAA;QAAKoE,KAAK,EAAEC,MAAM,CAACS,IAAK;QAAAP,QAAA,eACtBvE,OAAA;UAAKoE,KAAK,EAAEC,MAAM,CAACU,YAAa;UAAAR,QAAA,gBAC9BvE,OAAA;YAAAuE,QAAA,EAAI;UAAqB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9B3E,OAAA,CAACL,IAAI;YAACqF,EAAE,EAAC,eAAe;YAACZ,KAAK,EAAEC,MAAM,CAACY,QAAS;YAAAV,QAAA,EAAC;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;;EAEA;AACF;AACA;EACE,oBACE3E,OAAA;IAAKoE,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,gBAC3BvE,OAAA,CAACJ,MAAM;MAAA4E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV3E,OAAA;MAAMoE,KAAK,EAAEC,MAAM,CAACS,IAAK;MAAAP,QAAA,gBAEvBvE,OAAA;QAAKoE,KAAK,EAAEC,MAAM,CAACa,MAAO;QAAAX,QAAA,gBACxBvE,OAAA,CAACL,IAAI;UAACqF,EAAE,EAAC,eAAe;UAACZ,KAAK,EAAEC,MAAM,CAACY,QAAS;UAAAV,QAAA,EAAC;QAEjD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACP3E,OAAA;UACEmF,OAAO,EAAEpB,cAAe;UACxBK,KAAK,EAAEhD,UAAU,GAAGiD,MAAM,CAACe,cAAc,CAACC,MAAM,GAAGhB,MAAM,CAACe,cAAc,CAACE,OAAQ;UAAAf,QAAA,EAEhFnD,UAAU,GAAG,YAAY,GAAG;QAAoB;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAGN3E,OAAA;QAAKoE,KAAK,EAAEC,MAAM,CAACkB,SAAU;QAAAhB,QAAA,gBAC3BvE,OAAA;UAAIoE,KAAK,EAAEC,MAAM,CAACmB,OAAQ;UAAAjB,QAAA,EAAErD,OAAO,CAAChB;QAAI;UAAAsE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC9C3E,OAAA;UAAKoE,KAAK,EAAEC,MAAM,CAACoB,QAAS;UAAAlB,QAAA,gBAC1BvE,OAAA;YAAKoE,KAAK,EAAEC,MAAM,CAACqB,QAAS;YAAAnB,QAAA,gBAC1BvE,OAAA;cAAMoE,KAAK,EAAEC,MAAM,CAACsB,SAAU;cAAApB,QAAA,EAAC;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAChD3E,OAAA;cAAMoE,KAAK,EAAEC,MAAM,CAACuB,SAAU;cAAArB,QAAA,EAAErD,OAAO,CAACd;YAAc;cAAAoE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3D,CAAC,eACN3E,OAAA;YAAKoE,KAAK,EAAEC,MAAM,CAACqB,QAAS;YAAAnB,QAAA,gBAC1BvE,OAAA;cAAMoE,KAAK,EAAEC,MAAM,CAACsB,SAAU;cAAApB,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC5C3E,OAAA;cAAMoE,KAAK,EAAEC,MAAM,CAACuB,SAAU;cAAArB,QAAA,EAAErD,OAAO,CAACf;YAAU;cAAAqE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvD,CAAC,eACN3E,OAAA;YAAKoE,KAAK,EAAEC,MAAM,CAACqB,QAAS;YAAAnB,QAAA,gBAC1BvE,OAAA;cAAMoE,KAAK,EAAEC,MAAM,CAACsB,SAAU;cAAApB,QAAA,EAAC;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC7C3E,OAAA;cACEoE,KAAK,EAAE;gBACL,GAAGC,MAAM,CAACwB,WAAW;gBACrBC,eAAe,EACb5E,OAAO,CAACd,cAAc,KAAK,CAAC,GAAG,KAAK,GACpCc,OAAO,CAACd,cAAc,GAAGc,OAAO,CAACf,UAAU,GAAG,CAAC,GAAG,QAAQ,GAAG,OAAO;gBACtE4F,KAAK,EAAE7E,OAAO,CAACd,cAAc,GAAGc,OAAO,CAACf,UAAU,GAAG,CAAC,IAAIe,OAAO,CAACd,cAAc,GAAG,CAAC,GAAG,OAAO,GAAG;cACnG,CAAE;cAAAmE,QAAA,EAEDrD,OAAO,CAACd,cAAc,KAAK,CAAC,GAAG,MAAM,GACpCc,OAAO,CAACd,cAAc,GAAGc,OAAO,CAACf,UAAU,GAAG,CAAC,GAAG,WAAW,GAAG;YAAW;cAAAqE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGN3E,OAAA;UAAKoE,KAAK,EAAEC,MAAM,CAAC2B,iBAAkB;UAAAzB,QAAA,eACnCvE,OAAA,CAACH,oBAAoB;YACnBK,IAAI,EAAEgB,OAAO,CAAChB,IAAK;YACnB+F,WAAW,EAAE/E,OAAO,CAACX,QAAS;YAC9BC,OAAO,EAAEU,OAAO,CAACV;UAAQ;YAAAgE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAGLrD,UAAU,iBACTtB,OAAA;QAAKoE,KAAK,EAAEC,MAAM,CAAC6B,qBAAsB;QAAA3B,QAAA,gBACvCvE,OAAA;UAAKoE,KAAK,EAAEC,MAAM,CAAC8B,kBAAmB;UAAA5B,QAAA,gBACpCvE,OAAA;YAAIoE,KAAK,EAAEC,MAAM,CAAC+B,iBAAkB;YAAA7B,QAAA,EAAC;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5D3E,OAAA;YAAMoE,KAAK,EAAEC,MAAM,CAACgC,gBAAiB;YAAA9B,QAAA,GAAC,gBACtB,EAAC,IAAI+B,IAAI,CAAChF,UAAU,CAACiF,SAAS,CAAC,CAACC,kBAAkB,CAAC,CAAC;UAAA;YAAAhC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACN3E,OAAA;UAAKoE,KAAK,EAAEC,MAAM,CAACoC,gBAAiB;UAAAlC,QAAA,gBAClCvE,OAAA;YACEoE,KAAK,EAAE;cACL,GAAGC,MAAM,CAACqC,qBAAqB;cAC/BZ,eAAe,EAAExE,UAAU,CAACsB,WAAW,GAAG,KAAK,GAAG;YACpD;UAAE;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACP3E,OAAA;YAAAuE,QAAA,GAAM,sBACgB,EAACjD,UAAU,CAACsB,WAAW,GAAG,UAAU,GAAG,WAAW;UAAA;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,EACLnD,WAAW,iBACVxB,OAAA;UAAKoE,KAAK,EAAEC,MAAM,CAAC7C,WAAY;UAAA+C,QAAA,EAAE/C;QAAW;UAAAgD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CACnD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN,EAGAzD,OAAO,CAACb,MAAM,GAAG,CAAC,iBACjBL,OAAA;QAAKoE,KAAK,EAAEC,MAAM,CAACsC,aAAc;QAAApC,QAAA,gBAC/BvE,OAAA;UAAIoE,KAAK,EAAEC,MAAM,CAACuC,YAAa;UAAArC,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjD3E,OAAA;UAAKoE,KAAK,EAAEC,MAAM,CAACwC,YAAa;UAAAtC,QAAA,EAC7B7D,KAAK,CAACoG,IAAI,CAAC;YAAExE,MAAM,EAAEpB,OAAO,CAACb;UAAO,CAAC,EAAE,CAAC0G,CAAC,EAAEC,CAAC,kBAC3ChH,OAAA;YAEEoE,KAAK,EAAE;cACL,GAAGC,MAAM,CAAC4C,WAAW;cACrB,IAAIjG,aAAa,KAAKgG,CAAC,GAAG3C,MAAM,CAAC6C,iBAAiB,GAAG,CAAC,CAAC;YACzD,CAAE;YACF/B,OAAO,EAAEA,CAAA,KAAMlE,gBAAgB,CAAC+F,CAAC,CAAE;YAAAzC,QAAA,GACpC,QACO,EAACyC,CAAC,GAAG,CAAC;UAAA,GAPPA,CAAC;YAAAxC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAQA,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,eAGD3E,OAAA;QAAKoE,KAAK,EAAEC,MAAM,CAAC8C,kBAAmB;QAAA5C,QAAA,gBACpCvE,OAAA;UAAIoE,KAAK,EAAEC,MAAM,CAACuC,YAAa;UAAArC,QAAA,EAC5BrD,OAAO,CAACb,MAAM,GAAG,CAAC,GAAG,SAASW,aAAa,GAAG,CAAC,OAAO,GAAG;QAAiB;UAAAwD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzE,CAAC,eACL3E,OAAA;UAAKoE,KAAK,EAAEC,MAAM,CAAC+C,SAAU;UAAA7C,QAAA,eAC3BvE,OAAA;YAAKoE,KAAK,EAAEC,MAAM,CAACgD,QAAS;YAAA9C,QAAA,EACzBrD,OAAO,CAACT,SAAS,CAACO,aAAa,CAAC,CAACuC,GAAG,CAAC,CAACL,UAAU,EAAEoE,KAAK,KAAK;cAC3D;cACA,MAAMC,SAAS,GAAGrG,OAAO,CAACN,cAAc,IACtCwB,MAAM,CAACoF,MAAM,CAACtG,OAAO,CAACN,cAAc,CAAC,CAACqB,QAAQ,CAACqF,KAAK,CAAC,IACrDtG,aAAa,KAAK,CAAC,CAAC,CAAC;;cAEvB,oBACEhB,OAAA;gBAEEoE,KAAK,EAAE;kBACL,GAAGC,MAAM,CAACoD,WAAW;kBACrB3B,eAAe,EAAE5C,UAAU,GAAG,SAAS,GAAG,SAAS;kBACnD,IAAIqE,SAAS,GAAGlD,MAAM,CAACqD,iBAAiB,GAAG,CAAC,CAAC;gBAC/C,CAAE;gBAAAnD,QAAA,gBAEFvE,OAAA;kBAAMoE,KAAK,EAAEC,MAAM,CAACsD,UAAW;kBAAApD,QAAA,EAAE+C,KAAK,GAAG;gBAAC;kBAAA9C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eAClD3E,OAAA;kBAAMoE,KAAK,EAAEC,MAAM,CAACuD,UAAW;kBAAArD,QAAA,EAC5BrB,UAAU,GAAG,UAAU,GAAG;gBAAW;kBAAAsB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClC,CAAC,EACN4C,SAAS,iBACRvH,OAAA;kBAAMoE,KAAK,EAAEC,MAAM,CAACwD,WAAY;kBAAAtD,QAAA,EAAC;gBAAM;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAC9C;cAAA,GAbI2C,KAAK;gBAAA9C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAcP,CAAC;YAEV,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGN3E,OAAA;UAAKoE,KAAK,EAAEC,MAAM,CAACyD,MAAO;UAAAvD,QAAA,gBACxBvE,OAAA;YAAKoE,KAAK,EAAEC,MAAM,CAAC0D,UAAW;YAAAxD,QAAA,gBAC5BvE,OAAA;cAAKoE,KAAK,EAAEC,MAAM,CAAC2D,WAAW,CAAClE;YAAU;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAChD3E,OAAA;cAAAuE,QAAA,EAAM;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB,CAAC,eACN3E,OAAA;YAAKoE,KAAK,EAAEC,MAAM,CAAC0D,UAAW;YAAAxD,QAAA,gBAC5BvE,OAAA;cAAKoE,KAAK,EAAEC,MAAM,CAAC2D,WAAW,CAACrE;YAAS;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC/C3E,OAAA;cAAAuE,QAAA,EAAM;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC,EACLzD,OAAO,CAACN,cAAc,iBACrBZ,OAAA;YAAKoE,KAAK,EAAEC,MAAM,CAAC0D,UAAW;YAAAxD,QAAA,gBAC5BvE,OAAA;cAAKoE,KAAK,EAAEC,MAAM,CAAC2D,WAAW,CAACC;YAAO;cAAAzD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC7C3E,OAAA;cAAAuE,QAAA,EAAM;YAAmB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGN3E,OAAA;QAAKoE,KAAK,EAAEC,MAAM,CAAC6D,UAAW;QAAA3D,QAAA,gBAC5BvE,OAAA;UAAIoE,KAAK,EAAEC,MAAM,CAACuC,YAAa;UAAArC,QAAA,EAAC;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvD3E,OAAA;UAAGoE,KAAK,EAAEC,MAAM,CAAC8D,UAAW;UAAA5D,QAAA,EAAC;QAG7B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,EACHzD,OAAO,CAACN,cAAc,iBACrBZ,OAAA;UAAGoE,KAAK,EAAEC,MAAM,CAAC+D,YAAa;UAAA7D,QAAA,GAAC,aAClB,EAACnC,MAAM,CAACC,IAAI,CAACnB,OAAO,CAACN,cAAc,CAAC,CAAC0B,MAAM,EAAC,SAAO,EAACF,MAAM,CAACC,IAAI,CAACnB,OAAO,CAACN,cAAc,CAAC,CAAC0B,MAAM,GAAG,CAAC,GAAG,OAAO,GAAG,KAAK,EAAC,sEAClI;QAAA;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACJ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAGN3E,OAAA;QAAKoE,KAAK,EAAEC,MAAM,CAACgE,YAAa;QAAA9D,QAAA,gBAC9BvE,OAAA;UAAIoE,KAAK,EAAEC,MAAM,CAACuC,YAAa;UAAArC,QAAA,EAAC;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzD3E,OAAA;UAAGoE,KAAK,EAAEC,MAAM,CAACiE,YAAa;UAAA/D,QAAA,gBAC5BvE,OAAA;YAAAuE,QAAA,EAAQ;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACzD,OAAO,CAACV,OAAO;QAAA;UAAAgE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC,eACJ3E,OAAA;UAAGoE,KAAK,EAAEC,MAAM,CAACiE,YAAa;UAAA/D,QAAA,EAAC;QAE/B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;;AAED;AACA;AACA;AAFA7D,EAAA,CAjXMD,gBAAgB;EAAA,QAELnB,SAAS;AAAA;AAAA6I,EAAA,GAFpB1H,gBAAgB;AAoXtB,MAAMwD,MAAM,GAAG;EACbC,SAAS,EAAE;IACTwB,eAAe,EAAE,SAAS;IAAE;IAC5B0C,SAAS,EAAE,OAAO;IAClBC,MAAM,EAAE,CAAC;IACTC,OAAO,EAAE,CAAC;IACV3C,KAAK,EAAE,SAAS;IAChB4C,UAAU,EAAE;EACd,CAAC;EACD7D,IAAI,EAAE;IACJ8D,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE,QAAQ;IACpBJ,OAAO,EAAE;EACX,CAAC;EACDxD,MAAM,EAAE;IACN0D,OAAO,EAAE,MAAM;IACfG,cAAc,EAAE,eAAe;IAC/BC,KAAK,EAAE,KAAK;IACZC,YAAY,EAAE;EAChB,CAAC;EACDhE,QAAQ,EAAE;IACRc,KAAK,EAAE,SAAS;IAChBmD,cAAc,EAAE,MAAM;IACtBR,OAAO,EAAE,UAAU;IACnB5C,eAAe,EAAE,SAAS;IAAE;IAC5BqD,YAAY,EAAE,KAAK;IACnBC,UAAU,EAAE;EACd,CAAC;EACDhE,cAAc,EAAE;IACdE,OAAO,EAAE;MACPoD,OAAO,EAAE,UAAU;MACnB5C,eAAe,EAAE,SAAS;MAC1BC,KAAK,EAAE,SAAS;MAChBsD,MAAM,EAAE,MAAM;MACdF,YAAY,EAAE,KAAK;MACnBG,MAAM,EAAE,SAAS;MACjBF,UAAU,EAAE;IACd,CAAC;IACD/D,MAAM,EAAE;MACNqD,OAAO,EAAE,UAAU;MACnB5C,eAAe,EAAE,SAAS;MAAE;MAC5BC,KAAK,EAAE,SAAS;MAChBsD,MAAM,EAAE,MAAM;MACdF,YAAY,EAAE,KAAK;MACnBG,MAAM,EAAE,SAAS;MACjBF,UAAU,EAAE;IACd;EACF,CAAC;EACD7D,SAAS,EAAE;IACTyD,KAAK,EAAE,KAAK;IACZlD,eAAe,EAAE,SAAS;IAAE;IAC5B4C,OAAO,EAAE,MAAM;IACfS,YAAY,EAAE,KAAK;IACnBF,YAAY,EAAE;EAChB,CAAC;EACDzD,OAAO,EAAE;IACPiD,MAAM,EAAE,YAAY;IACpBc,SAAS,EAAE;EACb,CAAC;EACD9D,QAAQ,EAAE;IACRmD,OAAO,EAAE,MAAM;IACfG,cAAc,EAAE,cAAc;IAC9BE,YAAY,EAAE;EAChB,CAAC;EACDvD,QAAQ,EAAE;IACRkD,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE;EACd,CAAC;EACDnD,SAAS,EAAE;IACT6D,QAAQ,EAAE,MAAM;IAChBP,YAAY,EAAE;EAChB,CAAC;EACDrD,SAAS,EAAE;IACT4D,QAAQ,EAAE,MAAM;IAChBJ,UAAU,EAAE;EACd,CAAC;EACDvD,WAAW,EAAE;IACX6C,OAAO,EAAE,UAAU;IACnBS,YAAY,EAAE,KAAK;IACnBC,UAAU,EAAE;EACd,CAAC;EACDpD,iBAAiB,EAAE;IACjBgD,KAAK,EAAE;EACT,CAAC;EACD9C,qBAAqB,EAAE;IACrB8C,KAAK,EAAE,KAAK;IACZlD,eAAe,EAAE,SAAS;IAAE;IAC5B4C,OAAO,EAAE,MAAM;IACfS,YAAY,EAAE,KAAK;IACnBF,YAAY,EAAE;EAChB,CAAC;EACD9C,kBAAkB,EAAE;IAClByC,OAAO,EAAE,MAAM;IACfG,cAAc,EAAE,eAAe;IAC/BD,UAAU,EAAE,QAAQ;IACpBG,YAAY,EAAE;EAChB,CAAC;EACD7C,iBAAiB,EAAE;IACjBqC,MAAM,EAAE,CAAC;IACTe,QAAQ,EAAE;EACZ,CAAC;EACDnD,gBAAgB,EAAE;IAChBmD,QAAQ,EAAE,MAAM;IAChBC,OAAO,EAAE;EACX,CAAC;EACDhD,gBAAgB,EAAE;IAChBmC,OAAO,EAAE,MAAM;IACfE,UAAU,EAAE;EACd,CAAC;EACDpC,qBAAqB,EAAE;IACrBsC,KAAK,EAAE,MAAM;IACbU,MAAM,EAAE,MAAM;IACdP,YAAY,EAAE,KAAK;IACnBQ,WAAW,EAAE;EACf,CAAC;EACDnI,WAAW,EAAE;IACXsE,eAAe,EAAE,sBAAsB;IACvC4C,OAAO,EAAE,UAAU;IACnBS,YAAY,EAAE,KAAK;IACnBS,SAAS,EAAE,MAAM;IACjBJ,QAAQ,EAAE;EACZ,CAAC;EACD7C,aAAa,EAAE;IACbqC,KAAK,EAAE,KAAK;IACZlD,eAAe,EAAE,SAAS;IAC1B4C,OAAO,EAAE,MAAM;IACfS,YAAY,EAAE,KAAK;IACnBF,YAAY,EAAE,MAAM;IACpBlD,KAAK,EAAE;EACT,CAAC;EACDa,YAAY,EAAE;IACZ2C,SAAS,EAAE,QAAQ;IACnBd,MAAM,EAAE;EACV,CAAC;EACD5B,YAAY,EAAE;IACZ+B,OAAO,EAAE,MAAM;IACfG,cAAc,EAAE,QAAQ;IACxBc,GAAG,EAAE;EACP,CAAC;EACD5C,WAAW,EAAE;IACXyB,OAAO,EAAE,UAAU;IACnB5C,eAAe,EAAE,SAAS;IAC1BuD,MAAM,EAAE,MAAM;IACdF,YAAY,EAAE,KAAK;IACnBG,MAAM,EAAE,SAAS;IACjBF,UAAU,EAAE;EACd,CAAC;EACDlC,iBAAiB,EAAE;IACjBpB,eAAe,EAAE,SAAS;IAAE;IAC5BC,KAAK,EAAE;EACT,CAAC;EACDoB,kBAAkB,EAAE;IAClB6B,KAAK,EAAE,KAAK;IACZlD,eAAe,EAAE,SAAS;IAC1B4C,OAAO,EAAE,MAAM;IACfS,YAAY,EAAE,KAAK;IACnBF,YAAY,EAAE,MAAM;IACpBlD,KAAK,EAAE;EACT,CAAC;EACDqB,SAAS,EAAE;IACTtB,eAAe,EAAE,SAAS;IAC1B4C,OAAO,EAAE,MAAM;IACfS,YAAY,EAAE;EAChB,CAAC;EACD9B,QAAQ,EAAE;IACRuB,OAAO,EAAE,MAAM;IACfkB,mBAAmB,EAAE,uCAAuC;IAC5DD,GAAG,EAAE;EACP,CAAC;EACDpC,WAAW,EAAE;IACXmB,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBW,MAAM,EAAE,MAAM;IACdP,YAAY,EAAE,KAAK;IACnBT,OAAO,EAAE,KAAK;IACdnI,QAAQ,EAAE;EACZ,CAAC;EACDmH,iBAAiB,EAAE;IACjBqC,SAAS,EAAE,oCAAoC;IAAE;IACjDV,MAAM,EAAE,mBAAmB,CAAE;EAC/B,CAAC;EACD1B,UAAU,EAAE;IACVyB,UAAU,EAAE,MAAM;IAClBI,QAAQ,EAAE;EACZ,CAAC;EACD5B,UAAU,EAAE;IACV4B,QAAQ,EAAE;EACZ,CAAC;EACD3B,WAAW,EAAE;IACXtH,QAAQ,EAAE,UAAU;IACpByJ,GAAG,EAAE,KAAK;IACVC,KAAK,EAAE,KAAK;IACZnE,eAAe,EAAE,SAAS;IAAE;IAC5BC,KAAK,EAAE,OAAO;IACdyD,QAAQ,EAAE,KAAK;IACfd,OAAO,EAAE,SAAS;IAClBS,YAAY,EAAE;EAChB,CAAC;EACDrB,MAAM,EAAE;IACNc,OAAO,EAAE,MAAM;IACfG,cAAc,EAAE,QAAQ;IACxBc,GAAG,EAAE,MAAM;IACXD,SAAS,EAAE;EACb,CAAC;EACD7B,UAAU,EAAE;IACVa,OAAO,EAAE,MAAM;IACfE,UAAU,EAAE;EACd,CAAC;EACDd,WAAW,EAAE;IACXlE,SAAS,EAAE;MACTkF,KAAK,EAAE,MAAM;MACbU,MAAM,EAAE,MAAM;MACd5D,eAAe,EAAE,SAAS;MAAE;MAC5B6D,WAAW,EAAE,KAAK;MAClBR,YAAY,EAAE;IAChB,CAAC;IACDxF,QAAQ,EAAE;MACRqF,KAAK,EAAE,MAAM;MACbU,MAAM,EAAE,MAAM;MACd5D,eAAe,EAAE,SAAS;MAAE;MAC5B6D,WAAW,EAAE,KAAK;MAClBR,YAAY,EAAE;IAChB,CAAC;IACDlB,MAAM,EAAE;MACNe,KAAK,EAAE,MAAM;MACbU,MAAM,EAAE,MAAM;MACd5D,eAAe,EAAE,OAAO;MACxBuD,MAAM,EAAE,mBAAmB;MAAE;MAC7BU,SAAS,EAAE,oCAAoC;MAAE;MACjDJ,WAAW,EAAE,KAAK;MAClBR,YAAY,EAAE;IAChB;EACF,CAAC;EACDjB,UAAU,EAAE;IACVc,KAAK,EAAE,KAAK;IACZlD,eAAe,EAAE,SAAS;IAC1B4C,OAAO,EAAE,MAAM;IACfS,YAAY,EAAE,KAAK;IACnBpD,KAAK,EAAE,SAAS;IAChBkD,YAAY,EAAE;EAChB,CAAC;EACDd,UAAU,EAAE;IACVoB,SAAS,EAAE,QAAQ;IACnBW,UAAU,EAAE;EACd,CAAC;EACD9B,YAAY,EAAE;IACZmB,SAAS,EAAE,QAAQ;IACnBW,UAAU,EAAE,KAAK;IACjBd,UAAU,EAAE,MAAM;IAClBrD,KAAK,EAAE,SAAS;IAAE;IAClB6D,SAAS,EAAE;EACb,CAAC;EACDvB,YAAY,EAAE;IACZW,KAAK,EAAE,KAAK;IACZlD,eAAe,EAAE,SAAS;IAC1B4C,OAAO,EAAE,MAAM;IACfS,YAAY,EAAE,KAAK;IACnBpD,KAAK,EAAE;EACT,CAAC;EACDuC,YAAY,EAAE;IACZiB,SAAS,EAAE,QAAQ;IACnBW,UAAU,EAAE,KAAK;IACjBzB,MAAM,EAAE;EACV,CAAC;EACD1D,YAAY,EAAE;IACZe,eAAe,EAAE,SAAS;IAAE;IAC5B4C,OAAO,EAAE,MAAM;IACfS,YAAY,EAAE,KAAK;IACnBpD,KAAK,EAAE,SAAS;IAAE;IAClBwD,SAAS,EAAE;EACb,CAAC;EACD3E,gBAAgB,EAAE;IAChBgE,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBE,cAAc,EAAE,QAAQ;IACxBD,UAAU,EAAE,QAAQ;IACpBY,MAAM,EAAE,MAAM;IACd3D,KAAK,EAAE;EACT,CAAC;EACDlB,cAAc,EAAE;IACdmE,KAAK,EAAE,MAAM;IACbU,MAAM,EAAE,MAAM;IACdL,MAAM,EAAE,oCAAoC;IAC5CF,YAAY,EAAE,KAAK;IACnBgB,SAAS,EAAE,mBAAmB;IAC9BC,SAAS,EAAE,yBAAyB;IACpCnB,YAAY,EAAE;EAChB;AACF,CAAC;AAAC,IAAAV,EAAA;AAAA8B,YAAA,CAAA9B,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}