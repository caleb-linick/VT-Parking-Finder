{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yugio\\\\OneDrive\\\\Desktop\\\\Capstone\\\\VT-Parking-Finder\\\\src\\\\components\\\\FavoriteParking.jsx\",\n  _s = $RefreshSig$();\n/**\r\n * FavoriteParking.jsx\r\n * \r\n * This component displays a user's favorite parking lots on the home page.\r\n * It provides quick access to lots the user frequently visits or wants to track.\r\n * \r\n * Features:\r\n * - Shows a list of user's favorite parking lots with availability information\r\n * - Provides links to detailed views of each favorite lot\r\n * - Shows login prompt if user is not authenticated\r\n * - Shows empty state message if user has no favorites\r\n * - Displays real-time availability status for each favorite lot\r\n * \r\n * @author VT Parking Finder Team\r\n * @version 1.0.0\r\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Sample data for parking lots - in production, this would come from an API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst parkingLots = [{\n  id: 1,\n  name: 'Perry Street Garage',\n  openSpots: 45,\n  totalSpots: 120\n}, {\n  id: 2,\n  name: 'Cassell Lot',\n  openSpots: 0,\n  totalSpots: 80\n}, {\n  id: 3,\n  name: 'Litton Reaves',\n  openSpots: 35,\n  totalSpots: 60\n}, {\n  id: 4,\n  name: 'Squires',\n  openSpots: 5,\n  totalSpots: 40\n}, {\n  id: 5,\n  name: 'Architecture Annex',\n  openSpots: 20,\n  totalSpots: 30\n}];\n\n/**\r\n * Component that displays a user's favorite parking lots\r\n * \r\n * @returns {JSX.Element} The rendered favorite parking component\r\n */\nconst FavoriteParking = () => {\n  _s();\n  // State for user's favorite parking lots and login status\n  const [userFavorites, setUserFavorites] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  /**\r\n   * Load user data and favorite parking lots on component mount\r\n   * Checks localStorage for user data and authentication status\r\n   */\n  useEffect(() => {\n    // Check if user is logged in and get favorites\n    const userStr = localStorage.getItem('user');\n    if (userStr) {\n      const user = JSON.parse(userStr);\n      setIsLoggedIn(true);\n    }\n  }, []);\n  useEffect(() => {\n    if (isLoggedIn) {\n      const fetchFavorites = async () => {\n        try {\n          const response = await fetch('/favorites', {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          if (!response.ok) {\n            throw new Error(`Error fetching favorites, status: ${response.status}`);\n          }\n          const data = await response.json();\n          // Map the spot IDs to the corresponding parking lot details.\n          const favoriteLots = parkingLots.filter(lot => data.includes(lot.id));\n          // Updates the favorites\n          setUserFavorites(favoriteLots);\n          let user = JSON.parse(localStorage.getItem('user'));\n          user.favorites = data;\n          // set the favorites to the logged in user\n          localStorage.setItem('user', JSON.stringify(user));\n        } catch (error) {\n          console.error('Error fetching favorites:', error);\n        }\n      };\n      fetchFavorites();\n    }\n  }, [isLoggedIn]);\n\n  /**\r\n   * Render login prompt if user is not authenticated\r\n   */\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: styles.title,\n        children: \"Your Favorite Parking Spots\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.loginPrompt,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Please \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            style: styles.loginLink,\n            children: \"log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), \" to see your favorite parking spots.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n  /**\r\n   * Render empty state if user has no favorites\r\n   */\n  if (userFavorites.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: styles.title,\n        children: \"Your Favorite Parking Spots\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.emptyState,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You haven't added any favorite parking spots yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Browse \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/parking-lots\",\n            style: styles.link,\n            children: \"parking lots\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this), \" and add some to your favorites!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n\n  /**\r\n   * Render user's favorite parking lots\r\n   */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.title,\n      children: \"Your Favorite Parking Spots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.favoritesList,\n      children: userFavorites.map(lot => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.favoriteItem,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.favoriteInfo,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: styles.lotName,\n            children: lot.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.availabilityBar,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                ...styles.availabilityFill,\n                width: `${lot.openSpots / lot.totalSpots * 100}%`,\n                backgroundColor: lot.openSpots === 0 ? 'red' : lot.openSpots < lot.totalSpots / 3 ? 'yellow' : 'green'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: styles.availabilityText,\n            children: [lot.openSpots, \" of \", lot.totalSpots, \" spots available\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/parking-lots/${lot.id}`,\n          style: styles.viewButton,\n          children: \"View Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, lot.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n/**\r\n * Component styles\r\n */\n_s(FavoriteParking, \"TKUf0zaIGE2dPJkfSvZiTv/W3aY=\");\n_c = FavoriteParking;\nconst styles = {\n  container: {\n    width: '100%',\n    backgroundColor: '#990000',\n    // Slightly lighter than primary maroon\n    borderRadius: '8px',\n    padding: '20px',\n    marginBottom: '20px'\n  },\n  title: {\n    margin: '0 0 15px 0',\n    textAlign: 'center',\n    color: '#FFFFFF'\n  },\n  favoritesList: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '15px'\n  },\n  favoriteItem: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    // Semi-transparent white\n    padding: '15px',\n    borderRadius: '4px'\n  },\n  favoriteInfo: {\n    flex: 1\n  },\n  lotName: {\n    margin: '0 0 10px 0',\n    fontSize: '1.2rem'\n  },\n  availabilityBar: {\n    width: '100%',\n    height: '10px',\n    backgroundColor: '#333333',\n    // Dark background for contrast\n    borderRadius: '5px',\n    overflow: 'hidden',\n    marginBottom: '5px'\n  },\n  availabilityFill: {\n    height: '100%',\n    borderRadius: '5px'\n    // Color is dynamically set based on availability\n  },\n  availabilityText: {\n    margin: '5px 0 0 0',\n    fontSize: '0.9rem'\n  },\n  viewButton: {\n    backgroundColor: '#FFFFFF',\n    color: '#800000',\n    // VT Maroon\n    padding: '8px 15px',\n    borderRadius: '4px',\n    textDecoration: 'none',\n    fontWeight: 'bold',\n    fontSize: '0.9rem'\n  },\n  loginPrompt: {\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    padding: '15px',\n    borderRadius: '4px',\n    textAlign: 'center'\n  },\n  loginLink: {\n    color: '#FFFFFF',\n    fontWeight: 'bold',\n    textDecoration: 'underline'\n  },\n  link: {\n    color: '#FFFFFF',\n    fontWeight: 'bold',\n    textDecoration: 'underline'\n  },\n  emptyState: {\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    padding: '15px',\n    borderRadius: '4px',\n    textAlign: 'center'\n  }\n};\nexport default FavoriteParking;\nvar _c;\n$RefreshReg$(_c, \"FavoriteParking\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","parkingLots","id","name","openSpots","totalSpots","FavoriteParking","_s","userFavorites","setUserFavorites","isLoggedIn","setIsLoggedIn","userStr","localStorage","getItem","user","JSON","parse","fetchFavorites","response","fetch","method","headers","ok","Error","status","data","json","favoriteLots","filter","lot","includes","favorites","setItem","stringify","error","console","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","loginPrompt","to","loginLink","length","emptyState","link","favoritesList","map","favoriteItem","favoriteInfo","lotName","availabilityBar","availabilityFill","width","backgroundColor","availabilityText","viewButton","_c","borderRadius","padding","marginBottom","margin","textAlign","color","display","flexDirection","gap","justifyContent","alignItems","flex","fontSize","height","overflow","textDecoration","fontWeight","$RefreshReg$"],"sources":["C:/Users/yugio/OneDrive/Desktop/Capstone/VT-Parking-Finder/src/components/FavoriteParking.jsx"],"sourcesContent":["/**\r\n * FavoriteParking.jsx\r\n * \r\n * This component displays a user's favorite parking lots on the home page.\r\n * It provides quick access to lots the user frequently visits or wants to track.\r\n * \r\n * Features:\r\n * - Shows a list of user's favorite parking lots with availability information\r\n * - Provides links to detailed views of each favorite lot\r\n * - Shows login prompt if user is not authenticated\r\n * - Shows empty state message if user has no favorites\r\n * - Displays real-time availability status for each favorite lot\r\n * \r\n * @author VT Parking Finder Team\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Sample data for parking lots - in production, this would come from an API\r\nconst parkingLots = [\r\n  { id: 1, name: 'Perry Street Garage', openSpots: 45, totalSpots: 120 },\r\n  { id: 2, name: 'Cassell Lot', openSpots: 0, totalSpots: 80 },\r\n  { id: 3, name: 'Litton Reaves', openSpots: 35, totalSpots: 60 },\r\n  { id: 4, name: 'Squires', openSpots: 5, totalSpots: 40 },\r\n  { id: 5, name: 'Architecture Annex', openSpots: 20, totalSpots: 30 }\r\n];\r\n\r\n/**\r\n * Component that displays a user's favorite parking lots\r\n * \r\n * @returns {JSX.Element} The rendered favorite parking component\r\n */\r\nconst FavoriteParking = () => {\r\n  // State for user's favorite parking lots and login status\r\n  const [userFavorites, setUserFavorites] = useState([]);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  /**\r\n   * Load user data and favorite parking lots on component mount\r\n   * Checks localStorage for user data and authentication status\r\n   */\r\n  useEffect(() => {\r\n    // Check if user is logged in and get favorites\r\n    const userStr = localStorage.getItem('user');\r\n    if (userStr) {\r\n      const user = JSON.parse(userStr);\r\n      setIsLoggedIn(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      const fetchFavorites = async () => {\r\n        try {\r\n          const response = await fetch('/favorites', {\r\n            method: 'GET',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          });\r\n          if (!response.ok) {\r\n            throw new Error(`Error fetching favorites, status: ${response.status}`);\r\n          }\r\n          const data = await response.json();\r\n          // Map the spot IDs to the corresponding parking lot details.\r\n          const favoriteLots = parkingLots.filter(lot => data.includes(lot.id));\r\n          // Updates the favorites\r\n          setUserFavorites(favoriteLots);\r\n\r\n          let user = JSON.parse(localStorage.getItem('user'));\r\n          user.favorites = data;\r\n          // set the favorites to the logged in user\r\n          localStorage.setItem('user', JSON.stringify(user));\r\n\r\n        } catch (error) {\r\n          console.error('Error fetching favorites:', error);\r\n        }\r\n      };\r\n\r\n      fetchFavorites();\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  /**\r\n   * Render login prompt if user is not authenticated\r\n   */\r\n  if (!isLoggedIn) {\r\n    return (\r\n      <div style={styles.container}>\r\n        <h2 style={styles.title}>Your Favorite Parking Spots</h2>\r\n        <div style={styles.loginPrompt}>\r\n          <p>Please <Link to=\"/login\" style={styles.loginLink}>log in</Link> to see your favorite parking spots.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Render empty state if user has no favorites\r\n   */\r\n  if (userFavorites.length === 0) {\r\n    return (\r\n      <div style={styles.container}>\r\n        <h2 style={styles.title}>Your Favorite Parking Spots</h2>\r\n        <div style={styles.emptyState}>\r\n          <p>You haven't added any favorite parking spots yet.</p>\r\n          <p>Browse <Link to=\"/parking-lots\" style={styles.link}>parking lots</Link> and add some to your favorites!</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Render user's favorite parking lots\r\n   */\r\n  return (\r\n    <div style={styles.container}>\r\n      <h2 style={styles.title}>Your Favorite Parking Spots</h2>\r\n      <div style={styles.favoritesList}>\r\n        {userFavorites.map(lot => (\r\n          <div key={lot.id} style={styles.favoriteItem}>\r\n            <div style={styles.favoriteInfo}>\r\n              <h3 style={styles.lotName}>{lot.name}</h3>\r\n              {/* Visual availability indicator */}\r\n              <div style={styles.availabilityBar}>\r\n                <div \r\n                  style={{\r\n                    ...styles.availabilityFill,\r\n                    width: `${(lot.openSpots / lot.totalSpots) * 100}%`,\r\n                    backgroundColor: lot.openSpots === 0 ? 'red' : \r\n                                    lot.openSpots < lot.totalSpots / 3 ? 'yellow' : 'green'\r\n                  }}\r\n                ></div>\r\n              </div>\r\n              <p style={styles.availabilityText}>\r\n                {lot.openSpots} of {lot.totalSpots} spots available\r\n              </p>\r\n            </div>\r\n            {/* Link to detailed view */}\r\n            <Link to={`/parking-lots/${lot.id}`} style={styles.viewButton}>\r\n              View Details\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * Component styles\r\n */\r\nconst styles = {\r\n  container: {\r\n    width: '100%',\r\n    backgroundColor: '#990000', // Slightly lighter than primary maroon\r\n    borderRadius: '8px',\r\n    padding: '20px',\r\n    marginBottom: '20px',\r\n  },\r\n  title: {\r\n    margin: '0 0 15px 0',\r\n    textAlign: 'center',\r\n    color: '#FFFFFF',\r\n  },\r\n  favoritesList: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '15px',\r\n  },\r\n  favoriteItem: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.1)', // Semi-transparent white\r\n    padding: '15px',\r\n    borderRadius: '4px',\r\n  },\r\n  favoriteInfo: {\r\n    flex: 1,\r\n  },\r\n  lotName: {\r\n    margin: '0 0 10px 0',\r\n    fontSize: '1.2rem',\r\n  },\r\n  availabilityBar: {\r\n    width: '100%',\r\n    height: '10px',\r\n    backgroundColor: '#333333', // Dark background for contrast\r\n    borderRadius: '5px',\r\n    overflow: 'hidden',\r\n    marginBottom: '5px',\r\n  },\r\n  availabilityFill: {\r\n    height: '100%',\r\n    borderRadius: '5px',\r\n    // Color is dynamically set based on availability\r\n  },\r\n  availabilityText: {\r\n    margin: '5px 0 0 0',\r\n    fontSize: '0.9rem',\r\n  },\r\n  viewButton: {\r\n    backgroundColor: '#FFFFFF',\r\n    color: '#800000', // VT Maroon\r\n    padding: '8px 15px',\r\n    borderRadius: '4px',\r\n    textDecoration: 'none',\r\n    fontWeight: 'bold',\r\n    fontSize: '0.9rem',\r\n  },\r\n  loginPrompt: {\r\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n    padding: '15px',\r\n    borderRadius: '4px',\r\n    textAlign: 'center',\r\n  },\r\n  loginLink: {\r\n    color: '#FFFFFF',\r\n    fontWeight: 'bold',\r\n    textDecoration: 'underline',\r\n  },\r\n  link: {\r\n    color: '#FFFFFF',\r\n    fontWeight: 'bold',\r\n    textDecoration: 'underline',\r\n  },\r\n  emptyState: {\r\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n    padding: '15px',\r\n    borderRadius: '4px',\r\n    textAlign: 'center',\r\n  },\r\n};\r\n\r\nexport default FavoriteParking;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}