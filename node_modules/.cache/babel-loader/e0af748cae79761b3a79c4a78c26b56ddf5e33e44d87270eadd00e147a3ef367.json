{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yugio\\\\OneDrive\\\\Desktop\\\\Capstone\\\\VT-Parking-Finder\\\\src\\\\components\\\\Header.jsx\",\n  _s = $RefreshSig$();\n/**\r\n * Header.jsx\r\n * \r\n * This component renders the application header which appears on all pages.\r\n * It provides navigation links to all major sections of the application and\r\n * adapts based on the user's authentication state.\r\n * \r\n * Features:\r\n * - Displays the application title\r\n * - Provides navigation links to Home, Parking Lots, and Login/Profile\r\n * - Highlights the active link based on the current route\r\n * - Conditionally shows Login or Profile link based on authentication status\r\n * \r\n * @author VT Parking Finder Team\r\n * @version 1.0.0\r\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\n/**\r\n * Header component with navigation links and authentication-aware UI\r\n * \r\n * @returns {JSX.Element} The rendered header component\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const location = useLocation();\n\n  // State to track authentication status\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [username, setUsername] = useState('');\n\n  /**\r\n   * Determines if a navigation link should be highlighted as active\r\n   * \r\n   * @param {string} path - The path to check against current location\r\n   * @returns {boolean} Whether the path is active\r\n   */\n  const isActive = path => {\n    if (path === '/' && location.pathname === '/') {\n      return true;\n    }\n    if (path !== '/' && location.pathname.startsWith(path)) {\n      return true;\n    }\n    return false;\n  };\n\n  /**\r\n   * Check user authentication status on component mount and route changes\r\n   * Updates the UI based on whether the user is logged in\r\n   */\n  useEffect(() => {\n    const userStr = localStorage.getItem('user');\n    if (userStr) {\n      const userData = JSON.parse(userStr);\n      setIsLoggedIn(true);\n      setUsername(userData.username || '');\n    } else {\n      setIsLoggedIn(false);\n      setUsername('');\n    }\n  }, [location.pathname]); // Re-check when path changes\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.headerContainer,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: styles.title,\n        children: \"VT Parking Finder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      style: styles.navBar,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        style: {\n          ...styles.navLink,\n          ...(isActive('/') ? styles.activeNavLink : {})\n        },\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/parking-lots\",\n        style: {\n          ...styles.navLink,\n          ...(isActive('/parking-lots') ? styles.activeNavLink : {})\n        },\n        children: \"Parking Lots\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profile\",\n        style: {\n          ...styles.navLink,\n          ...(isActive('/profile') ? styles.activeNavLink : {})\n        },\n        children: username || 'Profile'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        style: {\n          ...styles.navLink,\n          ...(isActive('/login') ? styles.activeNavLink : {})\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n/**\r\n * Component styles\r\n */\n_s(Header, \"vWV1Vn24Rbl2u8FfD5gINodQvnk=\", false, function () {\n  return [useLocation];\n});\n_c = Header;\nconst styles = {\n  headerContainer: {\n    width: '100%',\n    backgroundColor: '#600000',\n    // VT Maroon (darker shade)\n    padding: '20px 0',\n    textAlign: 'center'\n  },\n  title: {\n    margin: 0,\n    fontSize: '2rem',\n    color: '#FFFFFF',\n    fontWeight: 'bold'\n  },\n  navBar: {\n    width: '100%',\n    backgroundColor: '#700000',\n    // VT Maroon (slightly lighter than header)\n    display: 'flex',\n    justifyContent: 'center',\n    padding: '15px 0'\n  },\n  navLink: {\n    color: '#FFFFFF',\n    textDecoration: 'none',\n    margin: '0 15px',\n    fontSize: '1.1rem',\n    fontWeight: 'bold',\n    padding: '8px 16px',\n    borderRadius: '4px',\n    transition: 'background-color 0.3s'\n  },\n  activeNavLink: {\n    backgroundColor: 'rgba(255, 255, 255, 0.2)' // Semi-transparent white for active link\n  }\n};\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","Link","useLocation","jsxDEV","_jsxDEV","Header","_s","location","isLoggedIn","setIsLoggedIn","username","setUsername","isActive","path","pathname","startsWith","userStr","localStorage","getItem","userData","JSON","parse","children","style","styles","headerContainer","title","fileName","_jsxFileName","lineNumber","columnNumber","navBar","to","navLink","activeNavLink","_c","width","backgroundColor","padding","textAlign","margin","fontSize","color","fontWeight","display","justifyContent","textDecoration","borderRadius","transition","$RefreshReg$"],"sources":["C:/Users/yugio/OneDrive/Desktop/Capstone/VT-Parking-Finder/src/components/Header.jsx"],"sourcesContent":["/**\r\n * Header.jsx\r\n * \r\n * This component renders the application header which appears on all pages.\r\n * It provides navigation links to all major sections of the application and\r\n * adapts based on the user's authentication state.\r\n * \r\n * Features:\r\n * - Displays the application title\r\n * - Provides navigation links to Home, Parking Lots, and Login/Profile\r\n * - Highlights the active link based on the current route\r\n * - Conditionally shows Login or Profile link based on authentication status\r\n * \r\n * @author VT Parking Finder Team\r\n * @version 1.0.0\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\n/**\r\n * Header component with navigation links and authentication-aware UI\r\n * \r\n * @returns {JSX.Element} The rendered header component\r\n */\r\nconst Header = () => {\r\n  const location = useLocation();\r\n  \r\n  // State to track authentication status\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n\r\n  /**\r\n   * Determines if a navigation link should be highlighted as active\r\n   * \r\n   * @param {string} path - The path to check against current location\r\n   * @returns {boolean} Whether the path is active\r\n   */\r\n  const isActive = (path) => {\r\n    if (path === '/' && location.pathname === '/') {\r\n      return true;\r\n    }\r\n    if (path !== '/' && location.pathname.startsWith(path)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Check user authentication status on component mount and route changes\r\n   * Updates the UI based on whether the user is logged in\r\n   */\r\n  useEffect(() => {\r\n    const userStr = localStorage.getItem('user');\r\n    if (userStr) {\r\n      const userData = JSON.parse(userStr);\r\n      setIsLoggedIn(true);\r\n      setUsername(userData.username || '');\r\n    } else {\r\n      setIsLoggedIn(false);\r\n      setUsername('');\r\n    }\r\n  }, [location.pathname]); // Re-check when path changes\r\n  \r\n  return (\r\n    <header>\r\n      {/* Main header with title */}\r\n      <div style={styles.headerContainer}>\r\n        <h1 style={styles.title}>VT Parking Finder</h1>\r\n      </div>\r\n      \r\n      {/* Navigation bar */}\r\n      <nav style={styles.navBar}>\r\n        {/* Home link */}\r\n        <Link \r\n          to=\"/\" \r\n          style={{\r\n            ...styles.navLink,\r\n            ...(isActive('/') ? styles.activeNavLink : {})\r\n          }}\r\n        >\r\n          Home\r\n        </Link>\r\n        \r\n        {/* Parking Lots link */}\r\n        <Link \r\n          to=\"/parking-lots\" \r\n          style={{\r\n            ...styles.navLink,\r\n            ...(isActive('/parking-lots') ? styles.activeNavLink : {})\r\n          }}\r\n        >\r\n          Parking Lots\r\n        </Link>\r\n        \r\n        {/* Conditional Login/Profile link based on authentication */}\r\n        {isLoggedIn ? (\r\n          <Link \r\n            to=\"/profile\" \r\n            style={{\r\n              ...styles.navLink,\r\n              ...(isActive('/profile') ? styles.activeNavLink : {})\r\n            }}\r\n          >\r\n            {username || 'Profile'}\r\n          </Link>\r\n        ) : (\r\n          <Link \r\n            to=\"/login\" \r\n            style={{\r\n              ...styles.navLink,\r\n              ...(isActive('/login') ? styles.activeNavLink : {})\r\n            }}\r\n          >\r\n            Login\r\n          </Link>\r\n        )}\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\n/**\r\n * Component styles\r\n */\r\nconst styles = {\r\n  headerContainer: {\r\n    width: '100%',\r\n    backgroundColor: '#600000', // VT Maroon (darker shade)\r\n    padding: '20px 0',\r\n    textAlign: 'center',\r\n  },\r\n  title: {\r\n    margin: 0,\r\n    fontSize: '2rem',\r\n    color: '#FFFFFF',\r\n    fontWeight: 'bold',\r\n  },\r\n  navBar: {\r\n    width: '100%',\r\n    backgroundColor: '#700000', // VT Maroon (slightly lighter than header)\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    padding: '15px 0',\r\n  },\r\n  navLink: {\r\n    color: '#FFFFFF',\r\n    textDecoration: 'none',\r\n    margin: '0 15px',\r\n    fontSize: '1.1rem',\r\n    fontWeight: 'bold',\r\n    padding: '8px 16px',\r\n    borderRadius: '4px',\r\n    transition: 'background-color 0.3s',\r\n  },\r\n  activeNavLink: {\r\n    backgroundColor: 'rgba(255, 255, 255, 0.2)', // Semi-transparent white for active link\r\n  },\r\n};\r\n\r\nexport default Header;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;;AAEpD;AACA;AACA;AACA;AACA;AAJA,SAAAC,MAAA,IAAAC,OAAA;AAKA,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAE5C;AACF;AACA;AACA;AACA;AACA;EACE,MAAMa,QAAQ,GAAIC,IAAI,IAAK;IACzB,IAAIA,IAAI,KAAK,GAAG,IAAIN,QAAQ,CAACO,QAAQ,KAAK,GAAG,EAAE;MAC7C,OAAO,IAAI;IACb;IACA,IAAID,IAAI,KAAK,GAAG,IAAIN,QAAQ,CAACO,QAAQ,CAACC,UAAU,CAACF,IAAI,CAAC,EAAE;MACtD,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd,CAAC;;EAED;AACF;AACA;AACA;EACEb,SAAS,CAAC,MAAM;IACd,MAAMgB,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC5C,IAAIF,OAAO,EAAE;MACX,MAAMG,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACL,OAAO,CAAC;MACpCP,aAAa,CAAC,IAAI,CAAC;MACnBE,WAAW,CAACQ,QAAQ,CAACT,QAAQ,IAAI,EAAE,CAAC;IACtC,CAAC,MAAM;MACLD,aAAa,CAAC,KAAK,CAAC;MACpBE,WAAW,CAAC,EAAE,CAAC;IACjB;EACF,CAAC,EAAE,CAACJ,QAAQ,CAACO,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEzB,oBACEV,OAAA;IAAAkB,QAAA,gBAEElB,OAAA;MAAKmB,KAAK,EAAEC,MAAM,CAACC,eAAgB;MAAAH,QAAA,eACjClB,OAAA;QAAImB,KAAK,EAAEC,MAAM,CAACE,KAAM;QAAAJ,QAAA,EAAC;MAAiB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eAGN1B,OAAA;MAAKmB,KAAK,EAAEC,MAAM,CAACO,MAAO;MAAAT,QAAA,gBAExBlB,OAAA,CAACH,IAAI;QACH+B,EAAE,EAAC,GAAG;QACNT,KAAK,EAAE;UACL,GAAGC,MAAM,CAACS,OAAO;UACjB,IAAIrB,QAAQ,CAAC,GAAG,CAAC,GAAGY,MAAM,CAACU,aAAa,GAAG,CAAC,CAAC;QAC/C,CAAE;QAAAZ,QAAA,EACH;MAED;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAGP1B,OAAA,CAACH,IAAI;QACH+B,EAAE,EAAC,eAAe;QAClBT,KAAK,EAAE;UACL,GAAGC,MAAM,CAACS,OAAO;UACjB,IAAIrB,QAAQ,CAAC,eAAe,CAAC,GAAGY,MAAM,CAACU,aAAa,GAAG,CAAC,CAAC;QAC3D,CAAE;QAAAZ,QAAA,EACH;MAED;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAGNtB,UAAU,gBACTJ,OAAA,CAACH,IAAI;QACH+B,EAAE,EAAC,UAAU;QACbT,KAAK,EAAE;UACL,GAAGC,MAAM,CAACS,OAAO;UACjB,IAAIrB,QAAQ,CAAC,UAAU,CAAC,GAAGY,MAAM,CAACU,aAAa,GAAG,CAAC,CAAC;QACtD,CAAE;QAAAZ,QAAA,EAEDZ,QAAQ,IAAI;MAAS;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,gBAEP1B,OAAA,CAACH,IAAI;QACH+B,EAAE,EAAC,QAAQ;QACXT,KAAK,EAAE;UACL,GAAGC,MAAM,CAACS,OAAO;UACjB,IAAIrB,QAAQ,CAAC,QAAQ,CAAC,GAAGY,MAAM,CAACU,aAAa,GAAG,CAAC,CAAC;QACpD,CAAE;QAAAZ,QAAA,EACH;MAED;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CACP;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;;AAED;AACA;AACA;AAFAxB,EAAA,CAjGMD,MAAM;EAAA,QACOH,WAAW;AAAA;AAAAiC,EAAA,GADxB9B,MAAM;AAoGZ,MAAMmB,MAAM,GAAG;EACbC,eAAe,EAAE;IACfW,KAAK,EAAE,MAAM;IACbC,eAAe,EAAE,SAAS;IAAE;IAC5BC,OAAO,EAAE,QAAQ;IACjBC,SAAS,EAAE;EACb,CAAC;EACDb,KAAK,EAAE;IACLc,MAAM,EAAE,CAAC;IACTC,QAAQ,EAAE,MAAM;IAChBC,KAAK,EAAE,SAAS;IAChBC,UAAU,EAAE;EACd,CAAC;EACDZ,MAAM,EAAE;IACNK,KAAK,EAAE,MAAM;IACbC,eAAe,EAAE,SAAS;IAAE;IAC5BO,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,QAAQ;IACxBP,OAAO,EAAE;EACX,CAAC;EACDL,OAAO,EAAE;IACPS,KAAK,EAAE,SAAS;IAChBI,cAAc,EAAE,MAAM;IACtBN,MAAM,EAAE,QAAQ;IAChBC,QAAQ,EAAE,QAAQ;IAClBE,UAAU,EAAE,MAAM;IAClBL,OAAO,EAAE,UAAU;IACnBS,YAAY,EAAE,KAAK;IACnBC,UAAU,EAAE;EACd,CAAC;EACDd,aAAa,EAAE;IACbG,eAAe,EAAE,0BAA0B,CAAE;EAC/C;AACF,CAAC;AAED,eAAehC,MAAM;AAAC,IAAA8B,EAAA;AAAAc,YAAA,CAAAd,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}